{"version":3,"file":"index.js","sources":["../src/aliases.ts","../src/helpers.ts","../src/sanityMonorepo.ts","../src/debug.ts","../src/renderDocument.ts","../src/vite/plugin-sanity-build-entries.ts","../src/vite/plugin-sanity-dot-workaround.ts","../src/vite/plugin-sanity-runtime-rewrite.ts","../src/webManifest.ts","../src/vite/plugin-sanity-favicons.ts","../src/getViteConfig.ts","../src/getEntryModule.ts","../src/sanityConfig.ts","../src/runtime.ts","../src/buildStaticFiles.ts","../src/devServer.ts"],"sourcesContent":["import path from 'path'\nimport type {SanityMonorepo} from './sanityMonorepo'\n\n/**\n * Returns an object of aliases for vite to use\n *\n * @internal\n */\nexport function getAliases(opts: {monorepo?: SanityMonorepo}): Record<string, string> {\n  const {monorepo} = opts\n\n  if (!monorepo?.path) {\n    return {}\n  }\n\n  // Load monorepo aliases (if the current Studio is located within the sanity monorepo)\n  // This is done in order for the Vite server to use the source files instead of\n  // the compiled output, allowing for a better dev experience.\n  const aliasesPath = path.join(monorepo.path, 'dev', 'aliases')\n\n  // eslint-disable-next-line import/no-dynamic-require\n  const devAliases: Record<string, string> = require(aliasesPath)\n\n  const monorepoAliases = Object.fromEntries(\n    Object.entries(devAliases).map(([key, modulePath]) => {\n      return [key, path.resolve(monorepo.path, modulePath)]\n    })\n  )\n\n  return monorepoAliases\n}\n","import path from 'path'\nimport readPkgUp from 'read-pkg-up'\nimport resolveFrom from 'resolve-from'\n\n/**\n * Given a module name such as \"styled-components\", will resolve the _module path_,\n * eg if require.resolve(`styled-components`) resolves to:\n *   `/some/node_modules/styled-components/lib/cjs/styled.js`\n * this function will instead return\n *   `/some/node_modules/styled-components`\n *\n * This is done in order for aliases to be pointing to the right module in terms of\n * _file-system location_, without pointing to a specific commonjs/browser/module variant\n *\n * @internal\n */\nexport async function getModulePath(mod: string, fromDir: string): Promise<string> {\n  const modulePath = resolveFrom(fromDir, mod)\n  const pkg = await readPkgUp({cwd: path.dirname(modulePath)})\n\n  return pkg ? path.dirname(pkg.path) : modulePath\n}\n\n/**\n * @internal\n */\nexport function isRecord(value: unknown): value is Record<string, unknown> {\n  return Boolean(value) && typeof value === 'object' && !Array.isArray(value)\n}\n\n/**\n * Ensures that the given path both starts and ends with a single slash\n *\n * @internal\n */\nexport function normalizeBasePath(pathName: string): string {\n  return `/${pathName}/`.replace(/^\\/+/, '/').replace(/\\/+$/, '/')\n}\n","import path from 'path'\nimport readPkgUp from 'read-pkg-up'\n\n/**\n * @internal\n */\nexport interface SanityMonorepo {\n  path: string\n}\n\n/**\n * Load information about the `sanity-io/sanity` monorepo (if applicable)\n *\n * @internal\n */\nexport async function loadSanityMonorepo(cwd: string): Promise<SanityMonorepo | undefined> {\n  let p = cwd\n\n  while (p !== '/') {\n    const readResult = await readPkgUp({cwd: p})\n\n    if (!readResult) {\n      return undefined\n    }\n\n    if (readResult.packageJson.isSanityMonorepo) {\n      return {path: path.dirname(readResult.path)}\n    }\n\n    p = path.dirname(path.dirname(readResult.path))\n  }\n\n  return undefined\n}\n","import debugIt from 'debug'\n\nexport const debug = debugIt('sanity:server')\n","/**\n * Looks for and imports (in preferred order):\n *   - src/_document.js\n *   - src/_document.tsx\n *\n * Then renders using ReactDOM to a string, which is sent back to the parent\n * process over the worker `postMessage` channel.\n */\nimport fs from 'fs'\nimport path from 'path'\nimport {Worker, parentPort, workerData, isMainThread} from 'worker_threads'\nimport chalk from 'chalk'\nimport importFresh from 'import-fresh'\nimport {generateHelpUrl} from '@sanity/generate-help-url'\nimport {createElement} from 'react'\nimport {renderToStaticMarkup} from 'react-dom/server'\nimport {getAliases} from './aliases'\nimport {SanityMonorepo} from './sanityMonorepo'\nimport {debug} from './debug'\n\n// Don't use threads in the jest world\n// eslint-disable-next-line no-process-env\nconst useThreads = typeof process.env.JEST_WORKER_ID === 'undefined'\nconst hasWarnedAbout = new Set<string>()\n\nconst defaultProps = {\n  entryPath: './.sanity/runtime/app.js',\n}\n\nconst autoGeneratedWarning = `\nThis file is auto-generated on \"sanity start\".\nModifications to this file is automatically discarded.\n\nTo customize the rendering of this file, see\n${generateHelpUrl('custom-document-component')}\n`.trim()\n\ninterface DocumentProps {\n  entryPath?: string\n  css?: string[]\n}\n\nexport function renderDocument(options: {\n  monorepo?: SanityMonorepo\n  studioRootPath: string\n  props?: DocumentProps\n}): Promise<string> {\n  return new Promise((resolve, reject) => {\n    if (!useThreads) {\n      resolve(getDocumentHtml(options.studioRootPath, options.props))\n      return\n    }\n\n    const worker = new Worker(__filename, {\n      workerData: {...options, shouldWarn: true},\n    })\n\n    worker.on('message', (msg) => {\n      if (msg.type === 'warning') {\n        if (hasWarnedAbout.has(msg.warnKey)) {\n          return\n        }\n\n        if (Array.isArray(msg.message)) {\n          msg.message.forEach((warning: string) =>\n            console.warn(`${chalk.yellow('[warn]')} ${warning}`)\n          )\n        } else {\n          console.warn(`${chalk.yellow('[warn]')} ${msg.message}`)\n        }\n\n        hasWarnedAbout.add(msg.warnKey)\n        return\n      }\n\n      if (msg.type === 'error') {\n        reject(new Error(msg.error || 'Document rendering worker stopped with an unknown error'))\n        return\n      }\n\n      if (msg.type === 'result') {\n        resolve(msg.html)\n      }\n    })\n    worker.on('error', reject)\n    worker.on('exit', (code) => {\n      if (code !== 0) {\n        reject(new Error(`Document rendering worker stopped with exit code ${code}`))\n      }\n    })\n  })\n}\n\nexport function decorateIndexWithAutoGeneratedWarning(template: string): string {\n  return template.replace(/<head/, `\\n<!--\\n${autoGeneratedWarning}\\n-->\\n<head`)\n}\n\nexport function getPossibleDocumentComponentLocations(studioRootPath: string): string[] {\n  return [path.join(studioRootPath, '_document.js'), path.join(studioRootPath, '_document.tsx')]\n}\n\nif (!isMainThread) {\n  renderDocumentFromWorkerData()\n}\n\nfunction renderDocumentFromWorkerData() {\n  if (!parentPort || !workerData) {\n    throw new Error('Must be used as a Worker with a valid options object in worker data')\n  }\n\n  const {monorepo, studioRootPath, props} = workerData || {}\n\n  if (typeof studioRootPath !== 'string') {\n    parentPort.postMessage({type: 'error', message: 'Missing/invalid `studioRootPath` option'})\n    return\n  }\n\n  if (props && typeof props !== 'object') {\n    parentPort.postMessage({type: 'error', message: '`props` must be an object if provided'})\n    return\n  }\n\n  // Require hook #1\n  // Alias monorepo modules\n  require('module-alias').addAliases(getAliases({monorepo}))\n\n  // Require hook #2\n  // Use `esbuild` to allow JSX/TypeScript and modern JS features\n  const {unregister} = require('esbuild-register/dist/node').register({\n    target: `node${process.version.slice(1)}`,\n    extensions: ['.jsx', '.ts', '.tsx', '.mjs'],\n  })\n\n  // Require hook #3\n  // Same as above, but we don't want to enforce a .jsx extension for anything with JSX\n  const {unregister: unregisterJs} = require('esbuild-register/dist/node').register({\n    target: `node${process.version.slice(1)}`,\n    extensions: ['.js'],\n    loader: 'jsx',\n  })\n\n  const html = getDocumentHtml(studioRootPath, props)\n\n  parentPort.postMessage({type: 'result', html})\n\n  // Be polite and clean up after esbuild-register\n  unregister()\n  unregisterJs()\n}\n\nfunction getDocumentHtml(studioRootPath: string, props?: DocumentProps): string {\n  const Document = getDocumentComponent(studioRootPath)\n\n  // NOTE: Validate the list of CSS paths so implementers of `_document.tsx` don't have to\n  // - If the path is not a full URL, check if it starts with `/`\n  //   - If not, then prepend a `/` to the string\n  const css = props?.css?.map((url) => {\n    try {\n      // If the URL is absolute, we don't need to prefix it\n      return new URL(url).toString()\n    } catch {\n      return url.startsWith('/') ? url : `/${url}`\n    }\n  })\n\n  const result = renderToStaticMarkup(createElement(Document, {...defaultProps, ...props, css}))\n  return `<!DOCTYPE html>${result}`\n}\n\nfunction getDocumentComponent(studioRootPath: string) {\n  const {DefaultDocument} = require('sanity')\n  const userDefined = tryLoadDocumentComponent(studioRootPath)\n\n  if (!userDefined) {\n    debug('Using default document component')\n    return DefaultDocument\n  }\n\n  debug('Found user defined document component at %s', userDefined.path)\n\n  const DocumentComp = userDefined.component.default\n  if (typeof DocumentComp === 'function') {\n    debug('User defined document component is a function, assuming valid')\n    return DocumentComp\n  }\n\n  debug('User defined document component did not have a default export')\n  const userExports = Object.keys(userDefined.component).join(', ') || 'None'\n  const relativePath = path.relative(process.cwd(), userDefined.path)\n  const typeHint =\n    typeof userDefined.component.default === 'undefined'\n      ? ''\n      : ` (type was ${typeof userDefined.component.default})`\n\n  const warnKey = `${relativePath}/${userDefined.modified}`\n\n  parentPort?.postMessage({\n    type: 'warning',\n    message: [\n      `${relativePath} did not have a default export that is a React component${typeHint}`,\n      `Found named exports/properties: ${userExports}`.trim(),\n      `Using default document component from \"sanity\".`,\n    ],\n    warnKey,\n  })\n\n  return DefaultDocument\n}\n\nfunction tryLoadDocumentComponent(studioRootPath: string) {\n  const locations = getPossibleDocumentComponentLocations(studioRootPath)\n\n  for (const componentPath of locations) {\n    try {\n      return {\n        // eslint-disable-next-line import/no-dynamic-require\n        component: importFresh<any>(componentPath),\n        path: componentPath,\n        // eslint-disable-next-line no-sync\n        modified: Math.floor(fs.statSync(componentPath)?.mtimeMs),\n      }\n    } catch (err) {\n      // Allow \"not found\" errors\n      if (err.code !== 'MODULE_NOT_FOUND') {\n        throw err\n      }\n    }\n  }\n\n  return null\n}\n","import type {ChunkMetadata, Plugin} from 'vite'\nimport type {SanityMonorepo} from '../sanityMonorepo'\nimport {renderDocument} from '../renderDocument'\n\ninterface ViteOutputBundle {\n  [fileName: string]: ViteRenderedChunk\n}\n\ninterface ViteRenderedChunk {\n  code: string\n  imports: string[]\n  viteMetadata: ChunkMetadata\n}\n\nexport function sanityBuildEntries(options: {\n  cwd: string\n  monorepo: SanityMonorepo | undefined\n  basePath: string\n}): Plugin {\n  const {cwd, monorepo, basePath} = options\n\n  let entryChunkRef: string\n\n  return {\n    name: '@sanity/server/build-entries',\n    apply: 'build',\n\n    buildStart() {\n      entryChunkRef = this.emitFile({\n        type: 'chunk',\n        id: '.sanity/runtime/app.js',\n        name: 'sanity',\n      })\n    },\n\n    async generateBundle(_options, outputBundle) {\n      const bundle = outputBundle as unknown as ViteOutputBundle\n\n      const entryFileName = this.getFileName(entryChunkRef)\n      const entryFile = bundle[entryFileName]\n      if (!entryFile) {\n        throw new Error(`Failed to find entry file in bundle (${entryFileName})`)\n      }\n\n      const entryPath = [basePath.replace(/\\/+$/, ''), entryFileName].join('/')\n\n      let css: string[] = []\n      if (entryFile.viteMetadata?.importedCss) {\n        // Check all the top-level imports of the entryPoint to see if they have\n        // static CSS assets that need loading\n        css = [...entryFile.viteMetadata.importedCss]\n        for (const key of entryFile.imports) {\n          // Traverse all CSS assets that isn't loaded by the runtime and\n          // need <link> tags in the HTML template\n          const importedCss = bundle[key]?.viteMetadata?.importedCss\n          if (importedCss) {\n            css.push(...importedCss)\n          }\n        }\n      }\n\n      this.emitFile({\n        type: 'asset',\n        fileName: 'index.html',\n        source: await renderDocument({\n          monorepo,\n          studioRootPath: cwd,\n          props: {\n            entryPath,\n            css,\n          },\n        }),\n      })\n    },\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport {Plugin} from 'vite'\nimport history from 'connect-history-api-fallback'\n\n/**\n * This is a Vite plugin for supporting locations containing `.` in their pathname.\n *\n * @see https://github.com/vitejs/vite/issues/2245\n */\nexport function sanityDotWorkaroundPlugin(): Plugin {\n  return {\n    name: '@sanity/server/dot-workaround',\n    configureServer(server) {\n      const {root} = server.config\n\n      return () => {\n        const handler = history({\n          disableDotRule: true,\n          rewrites: [\n            {\n              from: /\\/index.html$/,\n              to: ({parsedUrl}) => {\n                const pathname = parsedUrl.pathname\n\n                if (pathname && fs.existsSync(path.join(root, pathname))) {\n                  return pathname\n                }\n\n                return `/index.html`\n              },\n            },\n          ],\n        })\n\n        server.middlewares.use((req, res, next) => {\n          handler(req as any, res as any, next)\n        })\n      }\n    },\n  }\n}\n","import type {Plugin} from 'vite'\n\nexport function sanityRuntimeRewritePlugin(): Plugin {\n  return {\n    name: '@sanity/server/sanity-runtime-rewrite',\n    apply: 'serve',\n    configureServer(viteDevServer) {\n      return () => {\n        viteDevServer.middlewares.use((req, res, next) => {\n          if (req.url === '/index.html') {\n            req.url = '/.sanity/runtime/index.html'\n          }\n\n          next()\n        })\n      }\n    },\n  }\n}\n","export interface WebManifest {\n  icons: {\n    src: string\n    type: string\n    sizes: string\n  }[]\n}\n\nexport function generateWebManifest(basePath: string): WebManifest {\n  return {\n    icons: [\n      {src: `${basePath}/favicon-192.png`, type: 'image/png', sizes: '192x192'},\n      {src: `${basePath}/favicon-512.png`, type: 'image/png', sizes: '512x512'},\n    ],\n  }\n}\n","import path from 'path'\nimport fs from 'fs/promises'\nimport type {Plugin} from 'vite'\nimport {generateWebManifest} from '../webManifest'\n\nconst mimeTypes: Record<string, string | undefined> = {\n  '.ico': 'image/x-icon',\n  '.svg': 'image/svg+xml',\n  '.png': 'image/png',\n}\n\nexport function sanityFaviconsPlugin({\n  faviconsPath,\n  staticUrlPath,\n}: {\n  faviconsPath: string\n  staticUrlPath: string\n}): Plugin {\n  const cache: {favicons?: string[]} = {}\n\n  async function getFavicons(): Promise<string[]> {\n    if (cache.favicons) {\n      return cache.favicons\n    }\n\n    cache.favicons = await fs.readdir(faviconsPath)\n    return cache.favicons\n  }\n\n  return {\n    name: '@sanity/server/sanity-favicons',\n    apply: 'serve',\n    configureServer(viteDevServer) {\n      const webManifest = JSON.stringify(generateWebManifest(staticUrlPath), null, 2)\n      const webManifestPath = `${staticUrlPath}/manifest.webmanifest`\n\n      return () => {\n        viteDevServer.middlewares.use(async (req, res, next) => {\n          if (req.url?.endsWith(webManifestPath)) {\n            res.writeHead(200, 'OK', {'content-type': 'application/manifest+json'})\n            res.write(webManifest)\n            res.end()\n            return\n          }\n\n          const parsedUrl =\n            (req as any)._parsedUrl || new URL(req.url || '/', 'http://localhost:3333')\n\n          const icons = await getFavicons()\n          const fileName = path.basename(parsedUrl.pathname || '')\n          if (!icons.includes(fileName)) {\n            next()\n            return\n          }\n\n          const mimeType = mimeTypes[path.extname(fileName)] || 'application/octet-stream'\n          res.writeHead(200, 'OK', {'content-type': mimeType})\n          res.write(await fs.readFile(path.join(faviconsPath, fileName)))\n          res.end()\n        })\n      }\n    },\n  }\n}\n","import path from 'path'\nimport type {InlineConfig} from 'vite'\nimport viteReact from '@vitejs/plugin-react'\nimport {getAliases} from './aliases'\nimport {normalizeBasePath} from './helpers'\nimport {loadSanityMonorepo} from './sanityMonorepo'\nimport {sanityBuildEntries} from './vite/plugin-sanity-build-entries'\nimport {sanityDotWorkaroundPlugin} from './vite/plugin-sanity-dot-workaround'\nimport {sanityRuntimeRewritePlugin} from './vite/plugin-sanity-runtime-rewrite'\nimport {sanityFaviconsPlugin} from './vite/plugin-sanity-favicons'\n\nexport interface ViteOptions {\n  /**\n   * Root path of the studio/sanity app\n   */\n  cwd: string\n\n  /**\n   * Base path (eg under where to serve the app - `/studio` or similar)\n   * Will be normalized by `getViteConfig` to ensure it starts and end with a `/`\n   */\n  basePath?: string\n\n  /**\n   * Output directory (eg where to place the built files, if any)\n   */\n  outputDir?: string\n\n  /**\n   * Whether or not to enable source maps\n   */\n  sourceMap?: boolean\n\n  /**\n   * Whether or not to minify the output (only used in `mode: 'production'`)\n   */\n  minify?: boolean\n\n  /**\n   * HTTP development server configuration\n   */\n  server?: {port?: number; host?: string}\n\n  /**\n   * Mode to run vite in - eg development or production\n   */\n  mode: 'development' | 'production'\n}\n\n/**\n * Get a configuration object for Vite based on the passed options\n *\n * @internal Only meant for consumption inside of Sanity modules, do not depend on this externally\n */\nexport async function getViteConfig(options: ViteOptions): Promise<InlineConfig> {\n  const {\n    cwd,\n    mode,\n    outputDir,\n    // default to `true` when `mode=development`\n    sourceMap = options.mode === 'development',\n    server,\n    minify,\n    basePath: rawBasePath = '/',\n  } = options\n\n  const monorepo = await loadSanityMonorepo(cwd)\n  const basePath = normalizeBasePath(rawBasePath)\n  const faviconsPath = path.resolve(__dirname, '../static/favicons')\n  const staticPath = `${basePath}static`\n\n  const viteConfig: InlineConfig = {\n    root: cwd,\n    base: basePath,\n    build: {\n      outDir: outputDir || path.resolve(cwd, 'dist'),\n      sourcemap: sourceMap,\n    },\n    server: {\n      base: basePath,\n      host: server?.host,\n      port: server?.port || 3333,\n      strictPort: true,\n    },\n    configFile: false,\n    mode,\n    plugins: [\n      viteReact(),\n      sanityFaviconsPlugin({faviconsPath, staticUrlPath: staticPath}),\n      sanityDotWorkaroundPlugin(),\n      sanityRuntimeRewritePlugin(),\n      sanityBuildEntries({basePath, cwd, monorepo}),\n    ],\n    envPrefix: 'SANITY_STUDIO_',\n    logLevel: mode === 'production' ? 'silent' : 'info',\n    resolve: {\n      alias: getAliases({monorepo}),\n    },\n  }\n\n  if (mode === 'production') {\n    viteConfig.build = {\n      ...viteConfig.build,\n\n      assetsDir: 'static',\n      minify: minify ? 'esbuild' : false,\n      emptyOutDir: false, // Rely on CLI to do this\n\n      rollupOptions: {\n        input: {\n          sanity: path.join(cwd, '.sanity', 'runtime', 'app.js'),\n        },\n      },\n    }\n  }\n\n  return viteConfig\n}\n\n/**\n * Ensure Sanity entry chunk is always loaded\n *\n * @param config - User-modified configuration\n * @returns Merged configuration\n * @internal\n */\nexport function finalizeViteConfig(config: InlineConfig): InlineConfig {\n  if (typeof config.build?.rollupOptions?.input !== 'object') {\n    throw new Error(\n      'Vite config must contain `build.rollupOptions.input`, and it must be an object'\n    )\n  }\n\n  if (!config.root) {\n    throw new Error(\n      'Vite config must contain `root` property, and must point to the Sanity root directory'\n    )\n  }\n\n  return {\n    ...config,\n    build: {\n      ...config.build,\n      rollupOptions: {\n        ...config.build.rollupOptions,\n        input: {\n          ...config.build.rollupOptions.input,\n          sanity: path.join(config.root, '.sanity', 'runtime', 'app.js'),\n        },\n      },\n    },\n  }\n}\n","const entryModule = `\n// This file is auto-generated on 'sanity start'\n// Modifications to this file is automatically discarded\nimport {renderStudio} from \"sanity\"\nimport studioConfig from %STUDIO_CONFIG_LOCATION%\n\nrenderStudio(\n  document.getElementById(\"sanity\"),\n  studioConfig\n)\n`\n\nexport function getEntryModule(options: {relativeConfigLocation: string}): string {\n  return entryModule.replace(\n    /%STUDIO_CONFIG_LOCATION%/,\n    JSON.stringify(options.relativeConfigLocation)\n  )\n}\n","import path from 'path'\nimport fs from 'fs/promises'\n\n/**\n * Resolves the path to the studio configuration file with the following extensions,\n * in preferred order: '.mjs', '.js', '.ts', '.jsx', '.tsx' (aligns with vite)\n *\n * Falls back to the default studio configuration exported by `sanity` if none is found\n *\n * @internal\n */\nexport async function getSanityStudioConfigPath(studioRootPath: string): Promise<string> {\n  const configPaths = [\n    path.join(studioRootPath, 'sanity.config.mjs'),\n    path.join(studioRootPath, 'sanity.config.js'),\n    path.join(studioRootPath, 'sanity.config.ts'),\n    path.join(studioRootPath, 'sanity.config.jsx'),\n    path.join(studioRootPath, 'sanity.config.tsx'),\n  ]\n\n  const configs = await Promise.all(\n    configPaths.map(async (configPath) => ({\n      path: configPath,\n      exists: await fileExists(configPath),\n    }))\n  )\n\n  // No config file exists?\n  const availableConfigs = configs.filter((config) => config.exists)\n  if (availableConfigs.length === 0) {\n    console.warn('No `sanity.config.js`/`sanity.config.ts` found - using default studio config')\n    return path.resolve(__dirname, './default-config.js')\n  }\n\n  if (availableConfigs.length > 1) {\n    console.warn('Found multiple potential studio configs:')\n    availableConfigs.forEach((config) => console.warn(` - ${config.path}`))\n    console.warn(`Using ${availableConfigs[0].path}`)\n  }\n\n  return availableConfigs[0].path\n}\n\n/**\n * Asynchronously checks if a file exists. This is prone to race conditions,\n * as the file can exist/not exist by the time this resolves, but in this\n * case this is an acceptable trade-off. Best effort, and all that.\n */\nfunction fileExists(filePath: string): Promise<boolean> {\n  return fs.stat(filePath).then(\n    () => true,\n    () => false\n  )\n}\n","import fs from 'fs/promises'\nimport path from 'path'\nimport chokidar from 'chokidar'\nimport {debug} from './debug'\nimport {getEntryModule} from './getEntryModule'\nimport {getSanityStudioConfigPath} from './sanityConfig'\nimport {loadSanityMonorepo} from './sanityMonorepo'\nimport {\n  decorateIndexWithAutoGeneratedWarning,\n  getPossibleDocumentComponentLocations,\n  renderDocument,\n} from './renderDocument'\n\nexport interface RuntimeOptions {\n  cwd: string\n  watch: boolean\n}\n\n/**\n * Generates the `.sanity/runtime` directory, and optionally watches for custom\n * document files, rebuilding when they change\n *\n * @param options - Current working directory (Sanity root dir), and whether or not to watch\n * @internal\n */\nexport async function writeSanityRuntime({cwd, watch}: RuntimeOptions): Promise<void> {\n  const monorepo = await loadSanityMonorepo(cwd)\n  const runtimeDir = path.join(cwd, '.sanity', 'runtime')\n\n  debug('Making runtime directory')\n  await fs.mkdir(runtimeDir, {recursive: true})\n\n  async function renderAndWriteDocument() {\n    debug('Rendering document template')\n    const indexHtml = decorateIndexWithAutoGeneratedWarning(\n      await renderDocument({\n        studioRootPath: cwd,\n        monorepo,\n        props: {entryPath: `/${path.relative(cwd, path.join(runtimeDir, 'app.js'))}`},\n      })\n    )\n\n    debug('Writing index.html to runtime directory')\n    await fs.writeFile(path.join(runtimeDir, 'index.html'), indexHtml)\n  }\n\n  if (watch) {\n    chokidar\n      .watch(getPossibleDocumentComponentLocations(cwd))\n      .on('all', () => renderAndWriteDocument())\n  }\n\n  await renderAndWriteDocument()\n\n  debug('Writing app.js to runtime directory')\n  const studioConfigPath = await getSanityStudioConfigPath(cwd)\n  const relativeConfigLocation = path.relative(runtimeDir, studioConfigPath)\n  await fs.writeFile(path.join(runtimeDir, 'app.js'), getEntryModule({relativeConfigLocation}))\n}\n","import path from 'path'\nimport fs from 'fs/promises'\nimport {constants as fsConstants} from 'fs'\nimport {build, InlineConfig} from 'vite'\nimport {finalizeViteConfig, getViteConfig} from './getViteConfig'\nimport {generateWebManifest} from './webManifest'\nimport {writeSanityRuntime} from './runtime'\n\nexport interface ChunkModule {\n  name: string\n  originalLength: number\n  renderedLength: number\n}\n\nexport interface ChunkStats {\n  name: string\n  modules: ChunkModule[]\n}\n\nexport interface StaticBuildOptions {\n  cwd: string\n  basePath: string\n  outputDir: string\n  minify?: boolean\n  profile?: boolean\n  sourceMap?: boolean\n\n  vite?: (config: InlineConfig) => InlineConfig\n}\n\nexport async function buildStaticFiles(\n  options: StaticBuildOptions\n): Promise<{chunks: ChunkStats[]}> {\n  const {\n    cwd,\n    outputDir,\n    sourceMap = false,\n    minify = true,\n    basePath,\n    vite: extendViteConfig,\n  } = options\n\n  await writeSanityRuntime({cwd, watch: false})\n\n  let viteConfig = await getViteConfig({\n    cwd,\n    basePath,\n    outputDir,\n    minify,\n    sourceMap,\n    mode: 'production',\n  })\n\n  if (extendViteConfig) {\n    viteConfig = finalizeViteConfig(extendViteConfig(viteConfig))\n  }\n\n  // Copy files placed in /static to the built /static\n  const staticPath = path.join(outputDir, 'static')\n  await copyDir(path.join(cwd, 'static'), staticPath)\n\n  // Write favicons, not overwriting ones that already exist, to static folder\n  const faviconBasePath = `${basePath.replace(/\\/+$/, '')}/static`\n  await writeFavicons(faviconBasePath, staticPath)\n\n  const bundle = await build(viteConfig)\n\n  // For typescript only - this shouldn't ever be the case given we're not watching\n  if (Array.isArray(bundle) || !('output' in bundle)) {\n    return {chunks: []}\n  }\n\n  const stats: ChunkStats[] = []\n  bundle.output.forEach((chunk) => {\n    if (chunk.type !== 'chunk') {\n      return\n    }\n\n    stats.push({\n      name: chunk.name,\n      modules: Object.entries(chunk.modules).map(([rawFilePath, chunkModule]) => {\n        const filePath = rawFilePath.startsWith('\\x00')\n          ? rawFilePath.slice('\\x00'.length)\n          : rawFilePath\n\n        return {\n          name: path.isAbsolute(filePath) ? path.relative(cwd, filePath) : filePath,\n          originalLength: chunkModule.originalLength,\n          renderedLength: chunkModule.renderedLength,\n        }\n      }),\n    })\n  })\n\n  return {chunks: stats}\n}\n\nasync function copyDir(srcDir: string, destDir: string, skipExisting?: boolean): Promise<void> {\n  await fs.mkdir(destDir, {recursive: true})\n\n  for (const file of await tryReadDir(srcDir)) {\n    const srcFile = path.resolve(srcDir, file)\n    if (srcFile === destDir) {\n      continue\n    }\n\n    const destFile = path.resolve(destDir, file)\n    const stat = await fs.stat(srcFile)\n\n    if (stat.isDirectory()) {\n      await copyDir(srcFile, destFile, skipExisting)\n    } else if (skipExisting) {\n      await fs.copyFile(srcFile, destFile, fsConstants.COPYFILE_EXCL).catch(skipIfExistsError)\n    } else {\n      await fs.copyFile(srcFile, destFile)\n    }\n  }\n}\n\nasync function tryReadDir(dir: string): Promise<string[]> {\n  try {\n    const content = await fs.readdir(dir)\n    return content\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      return []\n    }\n\n    throw err\n  }\n}\n\nfunction skipIfExistsError(err: Error & {code: string}) {\n  if (err.code === 'EEXIST') {\n    return\n  }\n\n  throw err\n}\n\nasync function writeFavicons(basePath: string, destDir: string): Promise<void> {\n  await fs.mkdir(destDir, {recursive: true})\n  await copyDir(path.resolve(__dirname, '../static/favicons'), destDir, true)\n  await writeWebManifest(basePath, destDir)\n}\n\nasync function writeWebManifest(basePath: string, destDir: string): Promise<void> {\n  const content = JSON.stringify(generateWebManifest(basePath), null, 2)\n  await fs\n    .writeFile(path.join(destDir, 'manifest.webmanifest'), content, 'utf8')\n    .catch(skipIfExistsError)\n}\n","import chalk from 'chalk'\nimport {createServer, InlineConfig} from 'vite'\nimport {getViteConfig} from './getViteConfig'\nimport {debug} from './debug'\nimport {writeSanityRuntime} from './runtime'\n\nexport interface DevServerOptions {\n  cwd: string\n  basePath: string\n  staticPath: string\n\n  httpPort: number\n  httpHost?: string\n  projectName?: string\n\n  vite?: (config: InlineConfig) => InlineConfig\n}\n\nexport interface DevServer {\n  close(): Promise<void>\n}\n\nexport async function startDevServer(options: DevServerOptions): Promise<DevServer> {\n  const {cwd, httpPort, httpHost, basePath: base, vite: extendViteConfig} = options\n\n  const startTime = Date.now()\n  await writeSanityRuntime({cwd, watch: true})\n\n  debug('Resolving vite config')\n  let viteConfig = await getViteConfig({\n    basePath: base || '/',\n    mode: 'development',\n    server: {port: httpPort, host: httpHost},\n    cwd,\n  })\n\n  if (extendViteConfig) {\n    viteConfig = extendViteConfig(viteConfig)\n  }\n\n  debug('Creating vite server')\n  const server = await createServer(viteConfig)\n  const info = server.config.logger.info\n\n  await server.listen()\n\n  const startupDuration = Date.now() - startTime\n  const url = `http://${httpHost || 'localhost'}:${httpPort || '3333'}`\n  info(\n    `Sanity Studio ` +\n      `using ${chalk.cyan(`vite@${require('vite/package.json').version}`)} ` +\n      `ready in ${chalk.cyan(`${Math.ceil(startupDuration)}ms`)} ` +\n      `and running at ${chalk.cyan(url)}`\n  )\n\n  return {close: () => server.close()}\n}\n"],"names":["getAliases","opts","monorepo","path","aliasesPath","join","devAliases","require","monorepoAliases","Object","fromEntries","entries","map","key","modulePath","resolve","normalizeBasePath","pathName","replace","loadSanityMonorepo","cwd","p","readResult","readPkgUp","packageJson","isSanityMonorepo","dirname","debug","debugIt","useThreads","process","env","JEST_WORKER_ID","hasWarnedAbout","Set","defaultProps","entryPath","autoGeneratedWarning","generateHelpUrl","trim","renderDocument","options","Promise","reject","getDocumentHtml","studioRootPath","props","worker","Worker","__filename","workerData","shouldWarn","on","msg","type","has","warnKey","Array","isArray","message","forEach","warning","console","warn","chalk","yellow","add","Error","error","html","code","decorateIndexWithAutoGeneratedWarning","template","getPossibleDocumentComponentLocations","isMainThread","renderDocumentFromWorkerData","parentPort","postMessage","addAliases","unregister","register","target","version","slice","extensions","unregisterJs","loader","_a","Document","getDocumentComponent","css","url","URL","toString","startsWith","result","renderToStaticMarkup","createElement","DefaultDocument","userDefined","tryLoadDocumentComponent","DocumentComp","component","default","userExports","keys","relativePath","relative","typeHint","modified","locations","componentPath","importFresh","Math","floor","fs","statSync","mtimeMs","err","sanityBuildEntries","basePath","entryChunkRef","name","apply","buildStart","emitFile","id","generateBundle","_options","outputBundle","_b","_c","bundle","entryFileName","getFileName","entryFile","viteMetadata","importedCss","imports","push","fileName","source","sanityDotWorkaroundPlugin","configureServer","server","root","config","handler","history","disableDotRule","rewrites","from","to","parsedUrl","pathname","existsSync","middlewares","use","req","res","next","sanityRuntimeRewritePlugin","viteDevServer","generateWebManifest","icons","src","sizes","mimeTypes","sanityFaviconsPlugin","faviconsPath","staticUrlPath","cache","getFavicons","favicons","readdir","webManifest","JSON","stringify","webManifestPath","endsWith","writeHead","write","end","_parsedUrl","basename","includes","mimeType","extname","readFile","getViteConfig","mode","outputDir","sourceMap","minify","rawBasePath","__dirname","staticPath","viteConfig","base","build","outDir","sourcemap","host","port","strictPort","configFile","plugins","viteReact","envPrefix","logLevel","alias","assetsDir","emptyOutDir","rollupOptions","input","sanity","finalizeViteConfig","entryModule","getEntryModule","relativeConfigLocation","getSanityStudioConfigPath","configPaths","configs","all","configPath","exists","fileExists","availableConfigs","filter","length","filePath","stat","then","writeSanityRuntime","watch","runtimeDir","mkdir","recursive","renderAndWriteDocument","indexHtml","writeFile","chokidar","studioConfigPath","buildStaticFiles","vite","extendViteConfig","copyDir","faviconBasePath","writeFavicons","chunks","stats","output","chunk","modules","rawFilePath","chunkModule","isAbsolute","originalLength","renderedLength","srcDir","destDir","skipExisting","file","tryReadDir","srcFile","destFile","isDirectory","copyFile","fsConstants","COPYFILE_EXCL","catch","skipIfExistsError","dir","content","writeWebManifest","startDevServer","httpPort","httpHost","startTime","Date","now","createServer","info","logger","listen","startupDuration","cyan","ceil","close"],"mappings":"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"}