'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var jsxRuntime = require('react/jsx-runtime');

var icons = require('@sanity/icons');

var types = require('@sanity/types');

var ui = require('@sanity/ui');

var React = require('react');

var prepareConfig = require('./_prepareConfig-2f1df9bf.cjs');

require('rxjs');

require('rxjs/operators');

require('@sanity/mutator');

require('lodash');

require('@sanity/validation');

require('json-reduce');

require('react-rx');

require('shallow-equals');

require('rxjs-exhaustmap-with-trailing');

require('@sanity/util/content');

require('@sanity/util/paths');

require('history');

require('@sanity/bifur-client');

require('react-is');

require('@sanity/schema');

require('@sanity/schema/_internal');

require('@sanity/color');

require('react-fast-compare');

require('@sanity/portable-text-editor');

require('scroll-into-view-if-needed');

require('@reach/auto-id');

require('@sanity/util/legacyDateFormat');

require('date-fns');

require('speakingurl');

require('@sanity/image-url');

require('@sanity/uuid');

require('get-random-values-esm');

require('@sanity/asset-utils');

require('pluralize-esm');

require('exif-component');

require('react-dom');

require('dataloader');

require('raf');

require('groq-js');

require('rxjs-etc/operators');

require('mendoza');

require('@sanity/diff');

const getUnknownTypeFallback = (id, typeName) => ({
  title: /* @__PURE__ */jsxRuntime.jsxs("em", {
    children: ["No schema found for type ", /* @__PURE__ */jsxRuntime.jsx("code", {
      children: typeName
    })]
  }),
  subtitle: /* @__PURE__ */jsxRuntime.jsxs("em", {
    children: ["Document: ", /* @__PURE__ */jsxRuntime.jsx("code", {
      children: id
    })]
  }),
  media: icons.WarningOutlineIcon
});

function MissingSchemaType(props) {
  const {
    layout,
    value
  } = props;
  return /* @__PURE__ */jsxRuntime.jsx(prepareConfig.SanityDefaultPreview, _objectSpread(_objectSpread({}, getUnknownTypeFallback(value._id, value._type)), {}, {
    layout
  }));
}

function getIconWithFallback(icon, schemaType, defaultIcon) {
  if (icon === false) {
    return false;
  }

  return icon || schemaType && schemaType.icon || defaultIcon || false;
}

function PaneItem(props) {
  const {
    icon,
    id,
    layout = "default",
    pressed,
    schemaType,
    selected,
    title,
    value
  } = props;
  const schema = prepareConfig.useSchema();
  const documentPreviewStore = prepareConfig.useDocumentPreviewStore();
  const {
    ChildLink
  } = prepareConfig.usePaneRouter();
  const documentPresence = prepareConfig.useDocumentPresence(id);
  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name));
  const [clicked, setClicked] = React.useState(false);
  const preview = React.useMemo(() => {
    if (value && types.isSanityDocument(value)) {
      if (!schemaType || !hasSchemaType) {
        return /* @__PURE__ */jsxRuntime.jsx(MissingSchemaType, {
          value
        });
      }

      return /* @__PURE__ */jsxRuntime.jsx(prepareConfig.PaneItemPreview, {
        documentPreviewStore,
        icon: getIconWithFallback(icon, schemaType, icons.DocumentIcon),
        layout,
        schemaType,
        value,
        presence: documentPresence
      });
    }

    return /* @__PURE__ */jsxRuntime.jsx(prepareConfig.SanityDefaultPreview, {
      status: /* @__PURE__ */jsxRuntime.jsx(ui.Text, {
        muted: true,
        children: /* @__PURE__ */jsxRuntime.jsx(icons.ChevronRightIcon, {})
      }),
      icon: getIconWithFallback(icon, schemaType, icons.FolderIcon),
      layout,
      title
    });
  }, [documentPreviewStore, hasSchemaType, icon, layout, schemaType, title, value, documentPresence]);
  const LinkComponent = React.useMemo(() => React.forwardRef(function LinkComponent2(linkProps, ref) {
    return /* @__PURE__ */jsxRuntime.jsx(ChildLink, _objectSpread(_objectSpread({}, linkProps), {}, {
      childId: id,
      ref
    }));
  }), [ChildLink, id]);
  const handleClick = React.useCallback(() => setClicked(true), []);
  React.useEffect(() => setClicked(false), [selected]);
  return React.useMemo(() => /* @__PURE__ */jsxRuntime.jsx(prepareConfig.PreviewCard, {
    __unstable_focusRing: true,
    as: LinkComponent,
    "data-as": "a",
    "data-ui": "PaneItem",
    padding: 2,
    radius: 2,
    onClick: handleClick,
    pressed,
    selected: selected || clicked,
    tone: "inherit",
    children: preview
  }), [clicked, handleClick, LinkComponent, pressed, preview, selected]);
}

exports.PaneItem = PaneItem;
//# sourceMappingURL=_PaneItem-e9d8c4da.cjs.map
