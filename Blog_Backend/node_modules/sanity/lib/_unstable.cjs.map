{"version":3,"file":"_unstable.cjs","sources":["../src/presence/PresenceScope.tsx","../src/datastores/project/useProject.ts","../src/datastores/project/useProjectDatasets.ts","../src/components/zOffsets/ZIndexProvider.tsx","../src/field/types/array/util/arrayUtils.ts","../src/field/types/array/diff/ArrayOfOptionsFieldDiff.tsx","../src/field/types/datetime/diff/DatetimeFieldDiff.tsx","../src/field/types/url/diff/UrlFieldDiff.tsx","../src/field/types/slug/diff/SlugFieldDiff.tsx","../src/field/diff/resolve/diffResolver.ts","../src/components/IntentButton.tsx","../src/components/popoverDialog/PopoverDialog.tsx"],"sourcesContent":["import {Path} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport React, {useMemo} from 'react'\nimport {FormFieldPresenceContext} from './context'\n\nconst EMPTY_ARRAY: never[] = []\n\nfunction trimChildPath(path: Path, childPath: Path) {\n  return PathUtils.startsWith(path, childPath) ? PathUtils.trimLeft(path, childPath) : EMPTY_ARRAY\n}\n\nexport interface PresenceScopeProps {\n  readOnly?: boolean\n  path: Path\n  children: React.ReactNode\n}\n\nexport function PresenceScope(props: PresenceScopeProps) {\n  const {readOnly, path, children} = props\n  const contextPresence = React.useContext(FormFieldPresenceContext)\n\n  const childPresence = useMemo(() => {\n    return readOnly\n      ? EMPTY_ARRAY\n      : (contextPresence || EMPTY_ARRAY)\n          .filter((presence) => {\n            return PathUtils.startsWith(path, presence.path)\n          })\n          .map((presence) => ({\n            ...presence,\n            path: trimChildPath(path, presence.path),\n          }))\n  }, [contextPresence, path, readOnly])\n\n  return (\n    <FormFieldPresenceContext.Provider value={childPresence}>\n      {children}\n    </FormFieldPresenceContext.Provider>\n  )\n}\n","import {useEffect, useState} from 'react'\nimport {useProjectStore} from '../datastores'\nimport {ProjectData} from './types'\n\nexport function useProject(): {value: ProjectData | null} {\n  const projectStore = useProjectStore()\n  const [value, setValue] = useState<ProjectData | null>(null)\n\n  useEffect(() => {\n    const project$ = projectStore.get()\n    const sub = project$.subscribe(setValue)\n\n    return () => sub.unsubscribe()\n  }, [projectStore])\n\n  return {value}\n}\n","import {useEffect, useState} from 'react'\nimport {useProjectStore} from '../datastores'\nimport {ProjectDatasetData} from './types'\n\nexport function useProjectDatasets(): {value: ProjectDatasetData[] | null} {\n  const projectStore = useProjectStore()\n  const [value, setValue] = useState<ProjectDatasetData[] | null>(null)\n\n  useEffect(() => {\n    const project$ = projectStore.getDatasets()\n    const sub = project$.subscribe(setValue)\n\n    return () => sub.unsubscribe()\n  }, [projectStore])\n\n  return {value}\n}\n","import React from 'react'\nimport {defaults} from './defaults'\nimport {ZIndexContext} from './ZIndexContext'\n\n/**\n * @todo: Rename to `ZOffsetsProvider`\n *\n * @internal\n */\nexport function ZIndexProvider({children}: {children?: React.ReactNode}): React.ReactElement {\n  return <ZIndexContext.Provider value={defaults}>{children}</ZIndexContext.Provider>\n}\n","import {isKeyedObject} from '@sanity/types'\n\nexport function isEqual(item: unknown, otherItem: unknown): boolean {\n  if (item === otherItem) {\n    return true\n  }\n\n  if (typeof item !== typeof otherItem) {\n    return false\n  }\n\n  if (typeof item !== 'object' && !Array.isArray(item)) {\n    return item === otherItem\n  }\n\n  if (isKeyedObject(item) && isKeyedObject(otherItem) && item._key === otherItem._key) {\n    return true\n  }\n\n  if (Array.isArray(item) && Array.isArray(otherItem)) {\n    if (item.length !== otherItem.length) {\n      return false\n    }\n\n    return item.every((child, i) => isEqual(child, otherItem[i]))\n  }\n\n  if (item === null || otherItem === null) {\n    return item === otherItem\n  }\n\n  const obj = item as Record<string, unknown>\n  const otherObj = otherItem as Record<string, unknown>\n\n  const keys = Object.keys(obj)\n  const otherKeys = Object.keys(otherObj)\n  if (keys.length !== otherKeys.length) {\n    return false\n  }\n\n  return keys.every((keyName) => isEqual(obj[keyName], otherObj[keyName]))\n}\n","import {ArraySchemaType, isKeyedObject, SchemaType, TypedObject} from '@sanity/types'\nimport React from 'react'\nimport {Box, Flex} from '@sanity/ui'\nimport {SanityPreview} from '../../../../preview'\nimport {useUserColorManager} from '../../../../user-color'\nimport {DiffTooltip, FromToArrow, getAnnotationColor} from '../../../diff'\nimport {Annotation, ArrayDiff, Diff, DiffComponent, ItemDiff} from '../../../types'\nimport {Checkbox} from '../../boolean/preview'\nimport {isEqual} from '../util/arrayUtils'\n\ninterface NamedListOption {\n  title?: string\n  value: unknown\n}\n\ninterface NormalizedListOption {\n  title?: string\n  value: unknown\n  memberType?: Exclude<SchemaType, ArraySchemaType>\n  isPresent: boolean\n  annotation: Annotation\n  itemIndex: number\n}\n\nexport const ArrayOfOptionsFieldDiff: DiffComponent<ArrayDiff> = ({diff, schemaType}) => {\n  const options = schemaType.options?.list\n  const colorManager = useUserColorManager()\n  if (!Array.isArray(options)) {\n    // Shouldn't happen, because the resolver should only resolve here if it does\n    return null\n  }\n\n  return (\n    <div>\n      {diff.items\n        .map((item) => normalizeItems(item, diff, schemaType))\n        .filter((item): item is NormalizedListOption => item !== null)\n        .sort(sortItems)\n        .map((item, index) => {\n          const {annotation, isPresent, value, memberType, title} = item\n          const color = getAnnotationColor(colorManager, annotation)\n          const action = isPresent ? 'Added' : 'Removed'\n          return (\n            <Flex align=\"center\" key={getItemKey(diff, index)}>\n              <DiffTooltip annotations={annotation ? [annotation] : []} description={action}>\n                <Flex align=\"center\">\n                  <Checkbox checked={!isPresent} color={color} />\n                  <Box margin={2}>\n                    <FromToArrow />\n                  </Box>\n                  <Checkbox checked={isPresent} color={color} />\n                </Flex>\n              </DiffTooltip>\n              <Flex align=\"center\">\n                <ItemPreview value={title || value} memberType={memberType} />\n              </Flex>\n            </Flex>\n          )\n        })}\n    </div>\n  )\n}\n\nfunction normalizeItems(\n  item: ItemDiff,\n  parentDiff: ArrayDiff,\n  schemaType: ArraySchemaType\n): NormalizedListOption | null {\n  if (item.diff.action === 'unchanged') {\n    return null\n  }\n\n  const {fromValue, toValue} = parentDiff\n  const value = getValue(item.diff)\n  const wasPresent = isInArray(value, fromValue)\n  const isPresent = isInArray(value, toValue)\n  if (wasPresent === isPresent) {\n    return null\n  }\n\n  return {\n    title: getItemTitle(value, schemaType),\n    memberType: resolveMemberType(getValue(item.diff), schemaType),\n    itemIndex: getOptionIndex(value, schemaType),\n    annotation: item.annotation,\n    isPresent,\n    value,\n  }\n}\n\nfunction sortItems(itemA: NormalizedListOption, itemB: NormalizedListOption): number {\n  return itemA.itemIndex - itemB.itemIndex\n}\n\nfunction ItemPreview({value, memberType}: {memberType?: SchemaType; value: unknown}) {\n  return (\n    <Box marginX={2} marginY={1}>\n      {typeof value === 'string' || typeof value === 'number' ? (\n        value\n      ) : (\n        <SanityPreview schemaType={memberType!} value={value as any} layout=\"default\" />\n      )}\n    </Box>\n  )\n}\n\nfunction isInArray(value: unknown, parent?: unknown[] | null): boolean {\n  const array = parent || []\n  return typeof value === 'object' && value !== null\n    ? array.some((item) => isEqual(item, value))\n    : array.includes(value)\n}\n\nfunction getItemKey(diff: Diff, index: number): string | number {\n  const value = diff.toValue || diff.fromValue\n  return isKeyedObject(value) ? value._key : index\n}\n\nfunction getValue(diff: Diff) {\n  return typeof diff.toValue === 'undefined' ? diff.fromValue : diff.toValue\n}\n\nfunction resolveMemberType(item: unknown, schemaType: ArraySchemaType) {\n  const itemTypeName = resolveTypeName(item)\n  return schemaType.of.find((memberType) => memberType.name === itemTypeName)\n}\n\nfunction resolveTypeName(value: unknown): string {\n  const jsType = resolveJSType(value)\n  if (jsType !== 'object') {\n    return jsType\n  }\n\n  const obj = value as TypedObject\n  return ('_type' in obj && obj._type) || jsType\n}\n\nfunction resolveJSType(val: unknown) {\n  if (val === null) {\n    return 'null'\n  }\n\n  if (Array.isArray(val)) {\n    return 'array'\n  }\n\n  return typeof val\n}\n\nfunction isNamedOption(item: unknown | NamedListOption): item is NamedListOption {\n  return typeof item === 'object' && item !== null && 'title' in item\n}\n\nfunction getOptionIndex(item: unknown, schemaType: ArraySchemaType): number {\n  const list = schemaType.options?.list || []\n  return list.findIndex((opt) => isEqual(isNamedOption(opt) ? opt.value : opt, item))\n}\n\nfunction getItemTitle(item: unknown, schemaType: ArraySchemaType): string | undefined {\n  const list = (schemaType.options?.list || []) as NamedListOption[]\n  const index = getOptionIndex(item, schemaType)\n  return index === -1 ? undefined : list[index].title || undefined\n}\n","import React from 'react'\nimport {DiffFromTo} from '../../../diff'\nimport {DiffComponent, StringDiff} from '../../../types'\nimport {DatetimePreview} from '../preview'\n\nexport const DatetimeFieldDiff: DiffComponent<StringDiff> = ({diff, schemaType}) => {\n  return (\n    <DiffFromTo\n      align=\"center\"\n      diff={diff}\n      schemaType={schemaType}\n      previewComponent={DatetimePreview}\n    />\n  )\n}\n","import React from 'react'\nimport {DiffFromTo} from '../../../diff'\nimport {DiffComponent, StringDiff} from '../../../types'\nimport {StringPreview} from '../../string/preview'\n\nexport const UrlFieldDiff: DiffComponent<StringDiff> = ({diff, schemaType}) => {\n  return <DiffFromTo diff={diff} schemaType={schemaType} previewComponent={StringPreview} />\n}\n","import React from 'react'\nimport {DiffFromTo} from '../../../diff'\nimport {DiffComponent, ObjectDiff} from '../../../types'\nimport {SlugPreview} from '../preview'\n\ninterface Slug {\n  current?: string\n}\n\nexport const SlugFieldDiff: DiffComponent<ObjectDiff<Slug>> = ({diff, schemaType}) => {\n  return (\n    <DiffFromTo\n      layout=\"inline\"\n      diff={diff}\n      schemaType={schemaType}\n      previewComponent={SlugPreview}\n    />\n  )\n}\n","import {ArrayOfOptionsFieldDiff} from '../../types/array/diff'\nimport {DatetimeFieldDiff} from '../../types/datetime/diff'\nimport {UrlFieldDiff} from '../../types/url/diff'\nimport {SlugFieldDiff} from '../../types/slug/diff'\nimport {DiffComponentResolver} from '../../types'\n\nexport const diffResolver: DiffComponentResolver = ({schemaType}) => {\n  // datetime or date\n  if (['datetime', 'date'].includes(schemaType.name)) {\n    return DatetimeFieldDiff\n  }\n\n  if (schemaType.name === 'url') {\n    return UrlFieldDiff\n  }\n\n  if (schemaType.name === 'slug') {\n    return SlugFieldDiff\n  }\n\n  if (schemaType.jsonType === 'array' && Array.isArray(schemaType.options?.list)) {\n    return ArrayOfOptionsFieldDiff\n  }\n\n  return undefined\n}\n","import React, {ComponentProps} from 'react'\nimport {Button} from '@sanity/ui'\nimport {IntentLink} from '../router'\n\n/**\n * @beta\n */\nexport function IntentButton(\n  props: Omit<ComponentProps<typeof Button> & ComponentProps<typeof IntentLink>, 'as' | 'href'> & {\n    intent: string\n    params: Record<string, unknown> | [Record<string, unknown>, Record<string, unknown>]\n  }\n) {\n  return props.disabled ? (\n    <Button {...props} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...props} as={IntentLink} />\n  )\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Button, Card, Container, Flex, Popover, PopoverProps, Text} from '@sanity/ui'\nimport React, {HTMLProps} from 'react'\n\nexport function PopoverDialog(\n  props: Omit<PopoverProps, 'content' | 'width'> &\n    Omit<HTMLProps<HTMLDivElement>, 'ref' | 'width'> & {\n      header?: React.ReactNode\n      onClose: () => void\n      width?: number | number[] | 'auto'\n    }\n) {\n  const {children, header, onClose, width, ...restProps} = props\n\n  return (\n    <Popover\n      {...restProps}\n      content={\n        <Container width={width}>\n          <Flex direction=\"column\">\n            <Card flex=\"none\">\n              <Flex>\n                <Box flex={1}>\n                  <Text weight=\"semibold\">{header}</Text>\n                </Box>\n                <Box>\n                  <Button icon={CloseIcon} onClick={onClose} />\n                </Box>\n              </Flex>\n            </Card>\n            <Card flex={1} overflow=\"auto\">\n              {children}\n            </Card>\n          </Flex>\n        </Container>\n      }\n    />\n  )\n}\n"],"names":["EMPTY_ARRAY","trimChildPath","path","childPath","PathUtils","startsWith","trimLeft","PresenceScope","props","readOnly","children","contextPresence","React","useContext","FormFieldPresenceContext","childPresence","useMemo","filter","presence","map","jsx","Provider","value","useProject","projectStore","useProjectStore","setValue","useState","useEffect","project$","get","sub","subscribe","unsubscribe","useProjectDatasets","getDatasets","ZIndexProvider","ZIndexContext","defaults","isEqual","item","otherItem","Array","isArray","isKeyedObject","_key","length","every","child","i","obj","otherObj","keys","Object","otherKeys","keyName","ArrayOfOptionsFieldDiff","diff","schemaType","_a","options","list","colorManager","useUserColorManager","items","normalizeItems","sort","sortItems","index","annotation","isPresent","memberType","title","color","getAnnotationColor","action","jsxs","Flex","align","DiffTooltip","annotations","description","Checkbox","checked","Box","margin","FromToArrow","ItemPreview","getItemKey","parentDiff","fromValue","toValue","getValue","wasPresent","isInArray","getItemTitle","resolveMemberType","itemIndex","getOptionIndex","itemA","itemB","marginX","marginY","SanityPreview","layout","parent","array","some","includes","itemTypeName","resolveTypeName","of","find","name","jsType","resolveJSType","_type","val","isNamedOption","findIndex","opt","DatetimeFieldDiff","DiffFromTo","previewComponent","DatetimePreview","UrlFieldDiff","StringPreview","SlugFieldDiff","SlugPreview","diffResolver","jsonType","IntentButton","disabled","Button","as","role","IntentLink","PopoverDialog","header","onClose","width","restProps","Popover","content","Container","direction","Card","flex","Text","weight","icon","CloseIcon","onClick","overflow"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,MAAMA,cAAuB,EAA7B;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAAmCC,SAAnC,EAAoD;EAC3C,OAAAC,oBAAA,CAAUC,UAAVD,CAAqBF,IAArBE,EAA2BD,SAA3BC,IAAwCA,oBAAU,CAAAE,QAAVF,CAAmBF,IAAnBE,EAAyBD,SAAzBC,CAAxCA,GAA8EJ,WAA9E;AACT;;AAQO,SAASO,aAAT,CAAuBC,KAAvB,EAAkD;EACvD,MAAM;IAACC,QAAD;IAAWP,IAAX;IAAiBQ;EAAjB,IAA6BF,KAAnC;EACM,MAAAG,eAAA,GAAkBC,cAAAA,CAAAA,SAAAA,CAAAA,CAAMC,UAAND,CAAiBE,aAAwB,CAAAA,wBAAzCF,CAAlB;EAEA,MAAAG,aAAA,GAAgBC,KAAAA,CAAAA,OAAAA,CAAQ,MAAM;IAClC,OAAOP,WACHT,cACC,CAAAW,eAAA,IAAmBX,WAAnB,EACEiB,MADF,CACUC,QAAD,IAAc;MACpB,OAAOd,oBAAU,CAAAC,UAAVD,CAAqBF,IAArBE,EAA2Bc,QAAA,CAAShB,IAApCE,CAAP;IACD,CAHF,EAIEe,GAJF,CAIOD,QAAD,oCACAA,QADA;MAEHhB,IAAM,EAAAD,aAAA,CAAcC,IAAd,EAAoBgB,QAAA,CAAShB,IAA7B;IAFH,EAJN,CAFL;EAUC,CAXmBc,EAWnB,CAACL,eAAD,EAAkBT,IAAlB,EAAwBO,QAAxB,CAXmBO,CAAhB;EAcJ,sBAAAI,UAAA,CAAAA,GAAAA,CAACN,sCAAAA,CAAyBO,QAA1BD,EAAC;IAAkCE,KAAO,EAAAP,aAAzC;IACEL;EADF,CAADU,CAAA;AAIJ;;ACnCO,SAASG,UAAT,GAAmD;EACxD,MAAMC,eAAeC,aAAAA,CAAAA,eAAAA,EAArB;EACA,MAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBC,cAAAA,CAA6B,IAA7BA,CAA1B;EAEAC,KAAAA,CAAAA,SAAAA,CAAU,MAAM;IACR,MAAAC,QAAA,GAAWL,aAAaM,GAAb,EAAX;IACA,MAAAC,GAAA,GAAMF,QAAS,CAAAG,SAAT,CAAmBN,QAAnB,CAAN;IAEC,OAAA,MAAMK,IAAIE,WAAJ,EAAN;EACT,CALAL,EAKG,CAACJ,YAAD,CALHI;EAOA,OAAO;IAACN;EAAD,CAAP;AACF;;ACZO,SAASY,kBAAT,GAAoE;EACzE,MAAMV,eAAeC,aAAAA,CAAAA,eAAAA,EAArB;EACA,MAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBC,cAAAA,CAAsC,IAAtCA,CAA1B;EAEAC,KAAAA,CAAAA,SAAAA,CAAU,MAAM;IACR,MAAAC,QAAA,GAAWL,aAAaW,WAAb,EAAX;IACA,MAAAJ,GAAA,GAAMF,QAAS,CAAAG,SAAT,CAAmBN,QAAnB,CAAN;IAEC,OAAA,MAAMK,IAAIE,WAAJ,EAAN;EACT,CALAL,EAKG,CAACJ,YAAD,CALHI;EAOA,OAAO;IAACN;EAAD,CAAP;AACF;;ACPgB,SAAAc,cAAA,OAA6E;EAAA,IAA9D;IAAC1B;EAAD,CAA8D;EACpF,sBAAAU,UAAA,CAAAA,GAAAA,CAACiB,2BAAAA,CAAchB,QAAfD,EAAC;IAAuBE,KAAO,EAAAgB,aAAA,CAAAA,QAA9B;IAAyC5B;EAAzC,CAADU,CAAA;AACT;;ACTgB,SAAAmB,OAAA,CAAQC,IAAR,EAAuBC,SAAvB,EAAoD;EAClE,IAAID,SAASC,SAAb,EAAwB;IACf,OAAA,IAAA;EACT;;EAEI,IAAA,OAAOD,IAAP,KAAgB,OAAOC,SAAvB,EAAkC;IAC7B,OAAA,KAAA;EACT;;EAEA,IAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4B,CAACE,KAAM,CAAAC,OAAN,CAAcH,IAAd,CAAjC,EAAsD;IACpD,OAAOA,IAAS,KAAAC,SAAhB;EACF;;EAEI,IAAAG,KAAA,CAAAA,aAAAA,CAAcJ,IAAdI,KAAuBA,mBAAAA,CAAcH,SAAdG,CAAvBA,IAAmDJ,IAAA,CAAKK,IAAL,KAAcJ,SAAA,CAAUI,IAA3E,EAAiF;IAC5E,OAAA,IAAA;EACT;;EAEA,IAAIH,MAAMC,OAAN,CAAcH,IAAd,KAAuBE,KAAM,CAAAC,OAAN,CAAcF,SAAd,CAA3B,EAAqD;IAC/C,IAAAD,IAAA,CAAKM,MAAL,KAAgBL,SAAA,CAAUK,MAA1B,EAAkC;MAC7B,OAAA,KAAA;IACT;;IAEO,OAAAN,IAAA,CAAKO,KAAL,CAAW,CAACC,KAAD,EAAQC,CAAR,KAAcV,OAAQ,CAAAS,KAAA,EAAOP,SAAU,CAAAQ,CAAA,CAAjB,CAAjC,CAAA;EACT;;EAEI,IAAAT,IAAA,KAAS,IAAT,IAAiBC,SAAA,KAAc,IAA/B,EAAqC;IACvC,OAAOD,IAAS,KAAAC,SAAhB;EACF;;EAEA,MAAMS,GAAM,GAAAV,IAAZ;EACA,MAAMW,QAAW,GAAAV,SAAjB;EAEM,MAAAW,IAAA,GAAOC,MAAO,CAAAD,IAAP,CAAYF,GAAZ,CAAP;EACA,MAAAI,SAAA,GAAYD,MAAO,CAAAD,IAAP,CAAYD,QAAZ,CAAZ;;EACF,IAAAC,IAAA,CAAKN,MAAL,KAAgBQ,SAAA,CAAUR,MAA1B,EAAkC;IAC7B,OAAA,KAAA;EACT;;EAEO,OAAAM,IAAA,CAAKL,KAAL,CAAYQ,OAAD,IAAahB,QAAQW,GAAI,CAAAK,OAAA,GAAUJ,QAAS,CAAAI,OAAA,EAAvD,CAAA;AACT;;ACjBO,MAAMC,uBAAoD,GAAA,SAAwB;EAAA,IAAvB;IAACC,IAAD;IAAOC;EAAP,CAAuB;;EAxBzF,IAAAC,EAAA;;EAyBQ,MAAAC,OAAA,GAAA,CAAUD,EAAW,GAAAD,UAAA,CAAAE,OAArB,KAAU,IAAV,GAA8B,KAAA,CAA9B,GAA8BD,EAAA,CAAAE,IAA9B;EACN,MAAMC,eAAeC,aAAAA,CAAAA,mBAAAA,EAArB;;EACA,IAAI,CAACrB,KAAA,CAAMC,OAAN,CAAciB,OAAd,CAAL,EAA6B;IAEpB,OAAA,IAAA;EACT;;EAEA,OACGxC,eAAAA,UAAAA,CAAAA,GAAAA,CAAA,KAAAA,EAAA;IACEV,QAAA,EAAA+C,IAAA,CAAKO,KAAL,CACE7C,GADF,CACOqB,IAAD,IAAUyB,cAAe,CAAAzB,IAAA,EAAMiB,IAAN,EAAYC,UAAZ,CAD/B,EAEEzC,MAFF,CAEUuB,IAAD,IAAwCA,IAAS,KAAA,IAF1D,EAGE0B,IAHF,CAGOC,SAHP,EAIEhD,GAJF,CAIM,CAACqB,IAAD,EAAO4B,KAAP,KAAiB;MACpB,MAAM;QAACC,UAAD;QAAaC,SAAb;QAAwBhD,KAAxB;QAA+BiD,UAA/B;QAA2CC;MAA3C,IAAoDhC,IAA1D;MACM,MAAAiC,KAAA,GAAQC,aAAAA,CAAAA,kBAAAA,CAAmBZ,YAAnBY,EAAiCL,UAAjCK,CAAR;MACA,MAAAC,MAAA,GAASL,YAAY,UAAU,SAA/B;MACN,OACGM,eAAAA,UAAAA,CAAAA,IAAAA,CAAAC,EAAAA,CAAAA,IAAAD,EAAA;QAAKE,KAAM,EAAA,QAAX;QACCpE,QAAA,EAAA,CAACU,eAAAA,UAAAA,CAAAA,GAAAA,CAAA2D,aAAAA,CAAAA,WAAA3D,EAAA;UAAY4D,WAAa,EAAAX,UAAA,GAAa,CAACA,UAAD,CAAb,GAA4B,EAArD;UAAyDY,WAAa,EAAAN,MAAtE;UACCjE,QAAC,EAAA,eAAAkE,UAAA,CAAAA,IAAAA,CAAAC,OAAAD,EAAA;YAAKE,KAAM,EAAA,QAAX;YACCpE,QAAA,EAAA,CAACU,eAAAA,UAAAA,CAAAA,GAAAA,CAAA8D,aAAAA,CAAAA,QAAA9D,EAAA;cAAS+D,SAAS,CAACb,SAAnB;cAA8BG;YAA9B,CAAArD,CAAD,EACCA,eAAAA,UAAAA,CAAAA,GAAAA,CAAAgE,EAAAA,CAAAA,GAAAhE,EAAA;cAAIiE,MAAQ,EAAA,CAAZ;cACC3E,wCAAC4E,aAAY,CAAAA,aAAA;YADd,CAAAlE,CADD,EAICA,eAAAA,UAAAA,CAAAA,GAAAA,CAAA8D,aAAAA,CAAAA,QAAA9D,EAAA;cAAS+D,OAAS,EAAAb,SAAlB;cAA6BG;YAA7B,CAAArD,CAJD;UADD,CAAAwD;QADF,CAAAxD,CAAD,EASCA,eAAAA,UAAAA,CAAAA,GAAAA,CAAAyD,EAAAA,CAAAA,IAAAzD,EAAA;UAAK0D,KAAM,EAAA,QAAX;UACCpE,QAAC,EAAA,eAAAU,UAAA,CAAAA,GAAAA,CAAAmE,WAAAnE,EAAA;YAAYE,OAAOkD,KAAS,IAAAlD,KAA5B;YAAmCiD;UAAnC,CAAAnD;QADF,CAAAA,CATD;MADD,CAAAwD,EAAyBY,UAAA,CAAW/B,IAAX,EAAiBW,KAAjB,CAAzBQ,CADH;IAgBD,CAxBF;EADF,CAAAxD,CADH;AA6BF,CArCO;;AAuCP,SAAS6C,cAAT,CACEzB,IADF,EAEEiD,UAFF,EAGE/B,UAHF,EAI+B;EACzB,IAAAlB,IAAA,CAAKiB,IAAL,CAAUkB,MAAV,KAAqB,WAArB,EAAkC;IAC7B,OAAA,IAAA;EACT;;EAEM,MAAA;IAACe,SAAD;IAAYC;EAAZ,IAAuBF,UAAvB;EACA,MAAAnE,KAAA,GAAQsE,QAAS,CAAApD,IAAA,CAAKiB,IAAL,CAAjB;EACA,MAAAoC,UAAA,GAAaC,SAAU,CAAAxE,KAAA,EAAOoE,SAAP,CAAvB;EACA,MAAApB,SAAA,GAAYwB,SAAU,CAAAxE,KAAA,EAAOqE,OAAP,CAAtB;;EACN,IAAIE,eAAevB,SAAnB,EAA8B;IACrB,OAAA,IAAA;EACT;;EAEO,OAAA;IACLE,KAAA,EAAOuB,YAAa,CAAAzE,KAAA,EAAOoC,UAAP,CADf;IAELa,YAAYyB,iBAAkB,CAAAJ,QAAA,CAASpD,IAAK,CAAAiB,IAAd,CAAA,EAAqBC,UAArB,CAFzB;IAGLuC,SAAA,EAAWC,cAAe,CAAA5E,KAAA,EAAOoC,UAAP,CAHrB;IAILW,YAAY7B,IAAK,CAAA6B,UAJZ;IAKLC,SALK;IAMLhD;EANK,CAAA;AAQT;;AAEA,SAAS6C,SAAT,CAAmBgC,KAAnB,EAAgDC,KAAhD,EAAqF;EAC5E,OAAAD,KAAA,CAAMF,SAAN,GAAkBG,KAAM,CAAAH,SAAxB;AACT;;AAEA,SAASV,WAAT,QAAqF;EAAA,IAAhE;IAACjE,KAAD;IAAQiD;EAAR,CAAgE;EACnF,OACGnD,eAAAA,UAAAA,CAAAA,GAAAA,CAAAgE,EAAAA,CAAAA,GAAAhE,EAAA;IAAIiF,OAAS,EAAA,CAAb;IAAgBC,OAAS,EAAA,CAAzB;IACE5F,iBAAOY,UAAU,YAAY,OAAOA,KAAP,KAAiB,WAC7CA,uBAECF,UAAA,CAAAA,GAAAA,CAAAmF,2BAAAnF,EAAA;MAAcsC,UAAY,EAAAa,UAA1B;MAAuCjD,KAAvC;MAA4DkF,MAAO,EAAA;IAAnE,CAAApF;EAJJ,CAAAA,CADH;AASF;;AAEA,SAAS0E,SAAT,CAAmBxE,KAAnB,EAAmCmF,MAAnC,EAAuE;EAC/D,MAAAC,KAAA,GAAQD,UAAU,EAAlB;EACN,OAAO,OAAOnF,KAAP,KAAiB,QAAjB,IAA6BA,KAAU,KAAA,IAAvC,GACHoF,MAAMC,IAAN,CAAYnE,IAAD,IAAUD,OAAA,CAAQC,IAAR,EAAclB,KAAd,CAArB,CADG,GAEHoF,KAAA,CAAME,QAAN,CAAetF,KAAf,CAFJ;AAGF;;AAEA,SAASkE,UAAT,CAAoB/B,IAApB,EAAgCW,KAAhC,EAAgE;EACxD,MAAA9C,KAAA,GAAQmC,IAAK,CAAAkC,OAAL,IAAgBlC,IAAK,CAAAiC,SAA7B;EACN,OAAO9C,KAAc,CAAAA,aAAdA,CAActB,KAAdsB,IAAuBtB,KAAA,CAAMuB,IAA7BD,GAAoCwB,KAA3C;AACF;;AAEA,SAASwB,QAAT,CAAkBnC,IAAlB,EAA8B;EAC5B,OAAO,OAAOA,IAAK,CAAAkC,OAAZ,KAAwB,WAAxB,GAAsClC,IAAA,CAAKiC,SAA3C,GAAuDjC,IAAK,CAAAkC,OAAnE;AACF;;AAEA,SAASK,iBAAT,CAA2BxD,IAA3B,EAA0CkB,UAA1C,EAAuE;EAC/D,MAAAmD,YAAA,GAAeC,gBAAgBtE,KAA/B;EACN,OAAOkB,WAAWqD,EAAX,CAAcC,IAAd,CAAoBzC,UAAD,IAAgBA,UAAA,CAAW0C,IAAX,KAAoBJ,YAAvD,CAAP;AACF;;AAEA,SAASC,eAAT,CAAyBxF,KAAzB,EAAiD;EACzC,MAAA4F,MAAA,GAASC,cAAc7F,MAAvB;;EACN,IAAI4F,WAAW,QAAf,EAAyB;IAChB,OAAAA,MAAA;EACT;;EAEA,MAAMhE,GAAM,GAAA5B,KAAZ;EACQ,OAAA,WAAW4B,GAAX,IAAkBA,GAAA,CAAIkE,KAAtB,IAAgCF,MAAhC;AACV;;AAEA,SAASC,aAAT,CAAuBE,GAAvB,EAAqC;EACnC,IAAIA,QAAQ,IAAZ,EAAkB;IACT,OAAA,MAAA;EACT;;EAEI,IAAA3E,KAAA,CAAMC,OAAN,CAAc0E,GAAd,CAAA,EAAoB;IACf,OAAA,OAAA;EACT;;EAEA,OAAO,OAAOA,GAAd;AACF;;AAEA,SAASC,aAAT,CAAuB9E,IAAvB,EAAiF;EAC/E,OAAO,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAA,KAAS,IAArC,IAA6C,WAAWA,IAA/D;AACF;;AAEA,SAAS0D,cAAT,CAAwB1D,IAAxB,EAAuCkB,UAAvC,EAA4E;EAzJ5E,IAAAC,EAAA;;EA0JE,MAAME,IAAO,GAAA,CAAA,CAAAF,EAAA,GAAAD,UAAA,CAAWE,OAAX,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAD,EAAA,CAAoBE,IAApB,KAA4B,EAAzC;EACA,OAAOA,IAAK,CAAA0D,SAAL,CAAgBC,GAAD,IAASjF,OAAQ,CAAA+E,aAAA,CAAcE,GAAd,CAAA,GAAqBA,GAAI,CAAAlG,KAAzB,GAAiCkG,GAAjC,EAAsChF,IAAtC,CAAhC,CAAP;AACF;;AAEA,SAASuD,YAAT,CAAsBvD,IAAtB,EAAqCkB,UAArC,EAAsF;EA9JtF,IAAAC,EAAA;;EA+JE,MAAME,IAAQ,GAAA,CAAA,CAAAF,EAAA,GAAAD,UAAA,CAAWE,OAAX,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAD,EAAA,CAAoBE,IAApB,KAA4B,EAA1C;EACM,MAAAO,KAAA,GAAQ8B,cAAe,CAAA1D,IAAA,EAAMkB,UAAN,CAAvB;EACN,OAAOU,KAAU,KAAA,CAAA,CAAV,GAAe,KAAY,CAA3B,GAA2BP,IAAA,CAAKO,KAAL,CAAA,CAAYI,KAAZ,IAAqB,KAAA,CAAvD;AACF;;AC7JO,MAAMiD,iBAA+C,GAAA,SAAwB;EAAA,IAAvB;IAAChE,IAAD;IAAOC;EAAP,CAAuB;EAClF,OACGtC,eAAAA,UAAAA,CAAAA,GAAAA,CAAAsG,aAAAA,CAAAA,UAAAtG,EAAA;IACC0D,KAAM,EAAA,QADP;IAECrB,IAFD;IAGCC,UAHD;IAICiE,gBAAkB,EAAAC,aAAA,CAAAA;EAJnB,CAAAxG,CADH;AAQF,CATO;;ACAA,MAAMyG,YAA0C,GAAA,SAAwB;EAAA,IAAvB;IAACpE,IAAD;IAAOC;EAAP,CAAuB;EAC7E,OAAQtC,eAAAA,UAAAA,CAAAA,GAAAA,CAAAsG,aAAAA,CAAAA,UAAAtG,EAAA;IAAWqC,IAAX;IAAuBC,UAAvB;IAA+CiE,gBAAkB,EAAAG,aAAA,CAAAA;EAAjE,CAAA1G,CAAR;AACF,CAFO;;ACIA,MAAM2G,aAAiD,GAAA,SAAwB;EAAA,IAAvB;IAACtE,IAAD;IAAOC;EAAP,CAAuB;EACpF,OACGtC,eAAAA,UAAAA,CAAAA,GAAAA,CAAAsG,aAAAA,CAAAA,UAAAtG,EAAA;IACCoF,MAAO,EAAA,QADR;IAEC/C,IAFD;IAGCC,UAHD;IAICiE,gBAAkB,EAAAK,aAAA,CAAAA;EAJnB,CAAA5G,CADH;AAQF,CATO;;ACHA,MAAM6G,YAAsC,GAAA,SAAkB;EAAA,IAAjB;IAACvE;EAAD,CAAiB;;EANrE,IAAAC,EAAA;;EAQE,IAAI,CAAC,UAAD,EAAa,MAAb,EAAqBiD,QAArB,CAA8BlD,UAAA,CAAWuD,IAAzC,CAAJ,EAAoD;IAC3C,OAAAQ,iBAAA;EACT;;EAEI,IAAA/D,UAAA,CAAWuD,IAAX,KAAoB,KAApB,EAA2B;IACtB,OAAAY,YAAA;EACT;;EAEI,IAAAnE,UAAA,CAAWuD,IAAX,KAAoB,MAApB,EAA4B;IACvB,OAAAc,aAAA;EACT;;EAEI,IAAArE,UAAA,CAAWwE,QAAX,KAAwB,OAAxB,IAAmCxF,KAAA,CAAMC,OAAN,EAAcgB,EAAW,GAAAD,UAAA,CAAAE,YAAX,OAAoB,KAAA,IAAAD,EAAA,CAAAE,IAAlC,CAAnC,EAA4E;IACvE,OAAAL,uBAAA;EACT;;EAEO,OAAA,KAAA,CAAA;AACT,CAnBO;;ACCA,SAAS2E,YAAT,CACL3H,KADK,EAKL;EACO,OAAAA,KAAA,CAAM4H,QAAN,kBACJhH,UAAA,CAAAA,GAAAA,CAAAiH,SAAAjH,kCAAWZ,KAAXY;IAAkBkH,EAAG,EAAA,GAArBlH;IAAyBmH,IAAK,EAAA,MAA9BnH;IAAqC,iBAAc;EAAnDA,GADI,kBAGJA,UAAA,CAAAA,GAAAA,CAAAiH,SAAAjH,kCAAWZ,KAAXY;IAAkBkH,EAAI,EAAAE,aAAA,CAAAA;EAAtBpH,GAHI;AAKT;;ACdO,SAASqH,aAAT,CACLjI,KADK,EAOL;EACA,MAAM;IAACE,QAAD;IAAWgI,MAAX;IAAmBC,OAAnB;IAA4BC;EAA5B,IAAmDpI,KAAzD;EAAA,MAA4CqI,SAA5C,4BAAyDrI,KAAzD;;EAEA,OACGY,eAAAA,UAAAA,CAAAA,GAAAA,CAAA0H,EAAAA,CAAAA,OAAA1H,kCACKyH,SADLzH;IAEC2H,wBACG3H,UAAA,CAAAA,GAAAA,CAAA4H,YAAA5H,EAAA;MAAUwH,KAAV;MACClI,QAAC,EAAA,eAAAkE,UAAA,CAAAA,IAAAA,CAAAC,OAAAD,EAAA;QAAKqE,SAAU,EAAA,QAAf;QACCvI,QAAA,EAAA,CAACU,eAAAA,UAAAA,CAAAA,GAAAA,CAAA8H,EAAAA,CAAAA,IAAA9H,EAAA;UAAK+H,IAAK,EAAA,MAAV;UACCzI,QAAC,EAAA,eAAAkE,UAAA,CAAAA,IAAAA,CAAAC,OAAAD,EAAA;YACClE,QAAA,EAAA,CAACU,eAAAA,UAAAA,CAAAA,GAAAA,CAAAgE,EAAAA,CAAAA,GAAAhE,EAAA;cAAI+H,IAAM,EAAA,CAAV;cACCzI,QAAC,EAAA,eAAAU,UAAA,CAAAA,GAAAA,CAAAgI,OAAAhI,EAAA;gBAAKiI,MAAO,EAAA,UAAZ;gBAAwB3I,QAAA,EAAAgI;cAAxB,CAAAtH;YADF,CAAAA,CAAD,EAGCA,eAAAA,UAAAA,CAAAA,GAAAA,CAAAgE,EAAAA,CAAAA,GAAAhE,EAAA;cACCV,QAAC,EAAA,eAAAU,UAAA,CAAAA,GAAAA,CAAAiH,SAAAjH,EAAA;gBAAOkI,IAAM,EAAAC,KAAA,CAAAA,SAAb;gBAAwBC,OAAS,EAAAb;cAAjC,CAAAvH;YADF,CAAAA,CAHD;UADD,CAAAwD;QADF,CAAAxD,CAAD,EAUCA,eAAAA,UAAAA,CAAAA,GAAAA,CAAA8H,EAAAA,CAAAA,IAAA9H,EAAA;UAAK+H,IAAM,EAAA,CAAX;UAAcM,QAAS,EAAA,MAAvB;UACE/I;QADF,CAAAU,CAVD;MADD,CAAAwD;IADF,CAAAxD;EAHJA,GADH;AAwBF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}