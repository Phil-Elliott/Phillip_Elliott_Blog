{"version":3,"file":"_createStructureBuilder-ad600465.cjs","sources":["../src/config/useConfigContextFromSource.ts","../src/desk/structureBuilder/documentTypeListItems.ts","../src/desk/structureBuilder/createStructureBuilder.ts"],"sourcesContent":["import {useMemo} from 'react'\nimport type {Source, ConfigContext} from './types'\n\n/**\n * Reduce a {@link Source} down to a {@link ConfigContext}, memoizing using `React.useMemo`\n *\n * @param source - Source to convert\n * @returns A config context containing only the defined properties of that interface\n * @internal\n */\nexport function useConfigContextFromSource(source: Source): ConfigContext {\n  const {projectId, dataset, schema, currentUser, getClient} = source\n  return useMemo(() => {\n    const client = getClient({apiVersion: '2021-06-07'})\n    const context = Object.defineProperty(\n      {projectId, dataset, schema, currentUser, getClient, client},\n      'client',\n      {\n        get() {\n          console.warn(\n            '`configContext.client` is deprecated and will be removed in the next version! Use `configContext.getClient({apiVersion: \"2021-06-07\"})` instead.'\n          )\n          return client\n        },\n      }\n    )\n    return context\n  }, [projectId, dataset, schema, currentUser, getClient])\n}\n\n/**\n * Reduce a {@link Source} down to a {@link ConfigContext}, without memoization - use for non-react contexts\n *\n * @param source - Source to convert\n * @returns A config context containing only the defined properties of that interface\n * @internal\n */\nexport function getConfigContextFromSource(source: Source): ConfigContext {\n  const {projectId, dataset, schema, currentUser, getClient} = source\n  const client = getClient({apiVersion: '2021-06-07'})\n  return {projectId, dataset, schema, currentUser, getClient, client}\n}\n","import {SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\nimport {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListItemBuilder, ListItem} from './ListItem'\nimport {DocumentTypeListBuilder, DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {List} from './List'\nimport {Collection} from './StructureNodes'\nimport {StructureContext} from './types'\n\nfunction shouldShowIcon(schemaType: SchemaType): boolean {\n  const preview = schemaType.preview\n  return Boolean(preview && (preview.prepare || (preview.select && preview.select.media)))\n}\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n  const showIcons = shouldShowIcon(type)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .showIcons(showIcons)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {id: 'sorting', title: 'Sort'},\n        {id: 'layout', title: 'Layout'},\n        {id: 'actions', title: 'Actions'},\n      ]\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId}))\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Compact view')\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Detailed view')\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ]\n    )\n}\n","import {uniqueId} from 'lodash'\nimport type {SchemaType} from '@sanity/types'\nimport {isValidElementType} from 'react-is'\nimport {Source, getConfigContextFromSource} from '../../config'\nimport {getPublishedId} from '../../util'\nimport {ListBuilder} from './List'\nimport {\n  getDocumentTypeListItems,\n  getDocumentTypeListItem,\n  getDocumentTypeList,\n} from './documentTypeListItems'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType, getOrderingMenuItem} from './MenuItem'\nimport {ListItemBuilder} from './ListItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {DocumentListBuilder} from './DocumentList'\nimport type {Divider} from './StructureNodes'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {ComponentInput, ComponentBuilder} from './Component'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport * as views from './views'\nimport {\n  InitialValueTemplateItemBuilder,\n  defaultInitialValueTemplateItems,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport type {\n  StructureBuilder,\n  UserComponent,\n  StructureContext,\n  DefaultDocumentNodeResolver,\n} from './types'\n\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n"],"names":["useConfigContextFromSource","source","projectId","dataset","schema","currentUser","getClient","useMemo","client","apiVersion","context","Object","defineProperty","get","console","warn","getConfigContextFromSource","shouldShowIcon","schemaType","preview","Boolean","prepare","select","media","BUNDLED_DOC_TYPES","isBundledDocType","typeName","includes","isDocumentType","_a","type","name","isList","collection","getDocumentTypes","getTypeNames","filter","n","getDocumentTypeListItems","types","map","getDocumentTypeListItem","Error","title","startCase","ListItemBuilder","id","child","childContext","parent","parentItem","items","find","item","list","getDocumentTypeList","typeNameOrSpec","resolveDocumentNode","spec","showIcons","DocumentTypeListBuilder","params","defaultOrdering","DEFAULT_SELECTED_ORDERING_OPTION","by","menuItemGroups","documentId","canHandleIntent","defaultIntentChecker","menuItems","getOrderingMenuItemsForSchemaType","MenuItemBuilder","group","icon","StackCompactIcon","action","layout","StackIcon","hasIcon","getDefaultStructure","ListBuilder","some","getSchemaType","createStructureBuilder","defaultDocumentNode","configContext","getStructureBuilder","structureBuilder","options","builder","DocumentBuilder","getId","getPublishedId","defaults","documentTypeList","args","documentTypeListItem","documentTypeListItems","document","documentWithInitialValueTemplate","documentFromEditorWithInitialValue","defaultDocument","listItem","menuItem","menuItemGroup","MenuItemGroupBuilder","menuItemsFromInitialValueTemplateItems","documentList","DocumentListBuilder","documentListItem","DocumentListItemBuilder","orderingMenuItem","getOrderingMenuItem","orderingMenuItemsForType","editor","documentFromEditor","defaultInitialValueTemplateItems","initialValueTemplateItem","templateId","parameters","InitialValueTemplateItemBuilder","component","isValidElementType","ComponentBuilder","divider","uniqueId","view","views"],"mappings":"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"}