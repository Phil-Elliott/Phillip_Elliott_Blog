"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UrlInput = UrlInput;

var _ui = require("@sanity/ui");

var _react = _interopRequireDefault(require("react"));

var _getValidationRule = require("../utils/getValidationRule");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

// @todo Rename to `URLInput`?
function UrlInput(props) {
  var _uriRule$constraint, _uriRule$constraint$o;

  const {
    schemaType,
    validationError,
    elementProps
  } = props;
  const uriRule = (0, _getValidationRule.getValidationRule)(schemaType, 'uri');
  const inputType = uriRule !== null && uriRule !== void 0 && (_uriRule$constraint = uriRule.constraint) !== null && _uriRule$constraint !== void 0 && (_uriRule$constraint$o = _uriRule$constraint.options) !== null && _uriRule$constraint$o !== void 0 && _uriRule$constraint$o.allowRelative ? 'text' : 'url';
  return /*#__PURE__*/_react.default.createElement(_ui.TextInput, _extends({
    type: inputType,
    inputMode: "url",
    customValidity: validationError
  }, elementProps));
}