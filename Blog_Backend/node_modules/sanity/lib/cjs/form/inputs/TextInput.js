"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextInput = TextInput;

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const StyledTextArea = (0, _styledComponents.default)(_ui.TextArea)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  &[data-as='textarea'] {\n    resize: vertical;\n  }\n"])));

function TextInput(props) {
  const {
    schemaType,
    validationError,
    value,
    elementProps
  } = props;
  return /*#__PURE__*/_react.default.createElement(StyledTextArea, _extends({
    customValidity: validationError,
    value: value || '',
    placeholder: schemaType.placeholder,
    rows: typeof schemaType.rows === 'number' ? schemaType.rows : 10
  }, elementProps));
}