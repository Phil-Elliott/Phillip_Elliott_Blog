"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NumberInput = NumberInput;

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _getValidationRule = require("../utils/getValidationRule");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function NumberInput(props) {
  const {
    schemaType,
    validationError,
    value,
    elementProps
  } = props; // Show numpad on mobile if only positive numbers is preferred

  const minRule = (0, _getValidationRule.getValidationRule)(schemaType, 'min');
  const onlyPositiveNumber = ((minRule === null || minRule === void 0 ? void 0 : minRule.constraint) || 0) >= 0;
  return /*#__PURE__*/_react.default.createElement(_ui.TextInput, _extends({}, elementProps, {
    type: "number",
    step: "any",
    inputMode: onlyPositiveNumber ? 'numeric' : 'text',
    customValidity: validationError,
    value: value,
    placeholder: schemaType.placeholder,
    pattern: onlyPositiveNumber ? '[d]*' : undefined
  }));
}