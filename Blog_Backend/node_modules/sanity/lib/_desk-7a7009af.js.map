{"version":3,"file":"_desk-7a7009af.js","sources":["../src/desk/getIntentState.ts","../src/desk/router.ts","../src/desk/deskTool.ts"],"sourcesContent":["import {uuid} from '@sanity/uuid'\nimport {PaneNode, RouterPanes} from './types'\nimport {EMPTY_PARAMS, LOADING_PANE} from './constants'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n  const isTemplate = intent === 'create' && params.template\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = isTemplate ? {template: params.template} : EMPTY_PARAMS\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n","import {omit} from 'lodash'\nimport {route} from '../router'\nimport {RouterPanes, RouterPaneGroup, RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayload = (str: string) =>\n  /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n  ? never\n  : T extends 0\n  ? never\n  : T extends 0n\n  ? never\n  : T extends null | undefined\n  ? NonNullable<T>\n  : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  return chunks.reduce(\n    (pane, chunk) => {\n      if (isParam(chunk)) {\n        const key = chunk.slice(0, chunk.indexOf('='))\n        const value = chunk.slice(key.length + 1)\n        pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n      } else if (isPayload(chunk)) {\n        pane.payload = tryParseBase64Payload(chunk)\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unknown pane segment: %s - skipping', chunk)\n      }\n\n      return pane\n    },\n    {...initial, params: EMPTY_PARAMS, payload: undefined}\n  )\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload = typeof payload === 'undefined' ? undefined : btoa(JSON.stringify(payload))\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string) {\n  return data ? tryParsePayload(atob(data)) : undefined\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {createPlugin} from '../config'\nimport {getIntentState} from './getIntentState'\nimport {router} from './router'\nimport {DeskToolOptions} from './types'\n\nexport const deskTool = createPlugin<DeskToolOptions | void>((options) => ({\n  name: '@sanity/desk-tool',\n  tools: [\n    {\n      name: options?.name || 'desk',\n      title: options?.title || 'Desk',\n      icon: options?.icon || MasterDetailIcon,\n      component: lazy(() => import('./components/deskTool')),\n      canHandleIntent: (intent, params) => {\n        return Boolean(\n          (intent === 'edit' && params.id) ||\n            (intent === 'create' && params.type) ||\n            (intent === 'create' && params.template)\n        )\n      },\n      getIntentState,\n      options,\n      router,\n    },\n  ],\n}))\n"],"names":["state","activePanes","setActivePanes","panes","getIntentState","intent","params","routerState","payload","_a","editDocumentId","id","uuid","isTemplate","template","i","length","pane","canHandleIntent","call","index","type","schemaTypeName","options","filter","paneParams","EMPTY_PARAMS","slice","concat","legacyEditParamsToState","JSON","parse","decodeURIComponent","err","console","warn","encodePanesSegment","map","group","encodeChunks","join","encodeURIComponent","legacyEditParamsToPath","stringify","toState","pathSegment","parsePanesSegment","toPath","router","route","create","intents","path","transform","children","panePattern","isParam","str","test","isPayload","exclusiveParams","isTruthy","Boolean","parseChunks","chunks","initial","reduce","chunk","key","indexOf","value","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","btoa","encodedParams","Object","entries","entry","valueFromFirstSibling","includes","flat","parseOldPanesSegment","split","restOfSiblings","segment","sibling","omit","buffer","match","payloadChunk","tryParsePayload","push","json","message","data","atob","deskTool","createPlugin","name","tools","title","icon","MasterDetailIcon","component","lazy"],"mappings":"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"}