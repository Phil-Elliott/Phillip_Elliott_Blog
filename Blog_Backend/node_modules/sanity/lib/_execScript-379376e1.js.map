{"version":3,"file":"_execScript-379376e1.js","sources":["../src/cli/actions/exec/execScript.ts"],"sourcesContent":["import {spawn} from 'child_process'\nimport fs from 'fs/promises'\nimport path from 'path'\nimport type {CliCommandAction, CliCommandArguments} from '@sanity/cli'\nimport yargs from 'yargs/yargs'\nimport {hideBin} from 'yargs/helpers'\n\ninterface ExecFlags {\n  'with-user-token'?: boolean\n  'mock-browser-env'?: boolean\n}\n\nfunction parseCliFlags(args: CliCommandArguments<ExecFlags>) {\n  return yargs(hideBin(args.argv || process.argv)).command(\n    'exec [script]',\n    'executes given script',\n    (cmd) =>\n      cmd\n        .positional('script', {type: 'string', demandOption: true})\n        .option('with-user-token', {type: 'boolean', default: false})\n        .option('mock-browser-env', {type: 'boolean', default: false})\n  ).argv\n}\n\nconst execScript: CliCommandAction<ExecFlags> = async function execScript(args, context) {\n  // Reparsing CLI flags for better control of binary flags\n  const {withUserToken, mockBrowserEnv, script} = await parseCliFlags(args)\n  const {workDir} = context\n\n  const scriptPath = path.resolve(script || '')\n  if (!script) {\n    throw new Error('SCRIPT must be provided. `sanity exec <script>`')\n  }\n\n  if (!(await fs.stat(scriptPath).catch(() => false))) {\n    throw new Error(`${scriptPath} does not exist`)\n  }\n\n  const esbuildPath = path.resolve(__dirname, './esbuild.js')\n  const browserEnvPath = path.resolve(__dirname, './registerBrowserEnv.js')\n  const configClientPath = path.resolve(__dirname, './configClient.js')\n  const baseArgs = mockBrowserEnv ? ['-r', browserEnvPath] : ['-r', esbuildPath]\n  const tokenArgs = withUserToken ? ['-r', configClientPath] : []\n\n  const nodeArgs = [...baseArgs, ...tokenArgs, scriptPath, ...args.extraArguments]\n\n  const proc = spawn(process.argv[0], nodeArgs, {\n    stdio: 'inherit',\n    env: {\n      // eslint-disable-next-line no-process-env\n      ...process.env,\n      SANITY_BASE_PATH: workDir,\n    },\n  })\n  proc.on('close', process.exit)\n}\n\nexport default execScript\n"],"names":["parseCliFlags","args","yargs","hideBin","argv","process","command","cmd","positional","type","demandOption","option","default","execScript","context","withUserToken","mockBrowserEnv","script","workDir","scriptPath","path","resolve","Error","fs","stat","catch","esbuildPath","__dirname","browserEnvPath","configClientPath","baseArgs","tokenArgs","nodeArgs","extraArguments","proc","spawn","stdio","env","SANITY_BASE_PATH","on","exit"],"mappings":";;;;;;;;;;;;AAYA,SAASA,aAAT,CAAuBC,IAAvB,EAA6D;EAC3D,OAAOC,MAAMC,OAAQ,CAAAF,IAAA,CAAKG,IAAL,IAAaC,OAAQ,CAAAD,IAArB,EAAd,CAA0CE,OAA1C,CACL,eADK,EAEL,uBAFK,EAGJC,GAAD,IACEA,GACG,CAAAC,UADH,CACc,QADd,EACwB;IAACC,IAAM,EAAA,QAAP;IAAiBC,YAAc,EAAA;EAA/B,CADxB,EAEGC,MAFH,CAEU,iBAFV,EAE6B;IAACF,IAAA,EAAM,SAAP;IAAkBG,OAAA,EAAS;EAA3B,CAF7B,EAGGD,MAHH,CAGU,kBAHV,EAG8B;IAACF,IAAM,EAAA,SAAP;IAAkBG,OAAS,EAAA;EAA3B,CAH9B,CAJG,EAQLR,IARF;AASF;;AAEA,MAAMS,UAA0C,GAAA,eAAeA,WAAf,CAA0BZ,IAA1B,EAAgCa,OAAhC,EAAyC;EAEvF,MAAM;IAACC,aAAD;IAAgBC,cAAhB;IAAgCC;EAAhC,IAA0C,MAAMjB,cAAcC,KAApE;EACM,MAAA;IAACiB;EAAD,IAAYJ,OAAZ;EAEN,MAAMK,UAAa,GAAAC,IAAA,CAAKC,OAAL,CAAaJ,MAAA,IAAU,EAAvB,CAAnB;;EACA,IAAI,CAACA,MAAL,EAAa;IACL,MAAA,IAAIK,KAAJ,CAAU,iDAAV,CAAA;EACR;;EAEI,IAAA,EAAE,MAAMC,EAAG,CAAAC,IAAH,CAAQL,UAAR,EAAoBM,KAApB,CAA0B,MAAM,KAAhC,CAAR,CAAA,EAAiD;IAC7C,MAAA,IAAIH,KAAJ,WAAaH,UAAb,qBAAA;EACR;;EAEA,MAAMO,WAAc,GAAAN,IAAA,CAAKC,OAAL,CAAaM,SAAb,EAAwB,cAAxB,CAApB;EACA,MAAMC,cAAiB,GAAAR,IAAA,CAAKC,OAAL,CAAaM,SAAb,EAAwB,yBAAxB,CAAvB;EACA,MAAME,gBAAmB,GAAAT,IAAA,CAAKC,OAAL,CAAaM,SAAb,EAAwB,mBAAxB,CAAzB;EACM,MAAAG,QAAA,GAAWd,iBAAiB,CAAC,IAAD,EAAOY,cAAP,IAAyB,CAAC,IAAD,EAAOF,WAAP,CAArD;EACN,MAAMK,YAAYhB,aAAgB,GAAA,CAAC,IAAD,EAAOc,gBAAP,CAAA,GAA2B,EAA7D;EAEM,MAAAG,QAAA,GAAW,CAAC,GAAGF,QAAJ,EAAc,GAAGC,SAAjB,EAA4BZ,UAA5B,EAAwC,GAAGlB,IAAA,CAAKgC,cAAhD,CAAX;EAEN,MAAMC,IAAO,GAAAC,KAAA,CAAM9B,OAAQ,CAAAD,IAAR,CAAa,CAAb,CAAN,EAAuB4B,QAAvB,EAAiC;IAC5CI,KAAO,EAAA,SADqC;IAE5CC,GAAK,kCAEAhC,OAAQ,CAAAgC,GAFR;MAGHC,gBAAkB,EAAApB;IAHf;EAFuC,CAAjC,CAAb;EAQKgB,IAAA,CAAAK,EAAA,CAAG,OAAH,EAAYlC,OAAA,CAAQmC,IAApB;AACP,CA/BA;;"}