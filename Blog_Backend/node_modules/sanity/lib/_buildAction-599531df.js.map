{"version":3,"file":"_buildAction-599531df.js","sources":["../src/cli/actions/build/buildAction.ts"],"sourcesContent":["import path from 'path'\nimport {promisify} from 'util'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore This may not yet be built.\nimport {buildStaticFiles, ChunkModule, ChunkStats} from '@sanity/server'\nimport chalk from 'chalk'\nimport rimrafCallback from 'rimraf'\nimport type {CliCommandArguments, CliCommandContext} from '@sanity/cli'\nimport {checkStudioDependencyVersions} from '../../util/checkStudioDependencyVersions'\nimport {checkRequiredDependencies} from '../../util/checkRequiredDependencies'\nimport {getTimer} from '../../util/timing'\n\nconst rimraf = promisify(rimrafCallback)\n\nexport interface BuildSanityStudioCommandFlags {\n  yes?: boolean\n  y?: boolean\n  minify?: boolean\n  stats?: boolean\n  'source-maps'?: boolean\n}\n\nexport default async function buildSanityStudio(\n  args: CliCommandArguments<BuildSanityStudioCommandFlags>,\n  context: CliCommandContext,\n  overrides?: {basePath?: string}\n): Promise<{didCompile: boolean}> {\n  const timer = getTimer()\n  const {output, prompt, workDir, cliConfig} = context\n  const flags: BuildSanityStudioCommandFlags = {\n    minify: true,\n    stats: false,\n    'source-maps': false,\n    ...args.extOptions,\n  }\n\n  const unattendedMode = Boolean(flags.yes || flags.y)\n  const defaultOutputDir = path.resolve(path.join(workDir, 'dist'))\n  const outputDir = path.resolve(args.argsWithoutOptions[0] || defaultOutputDir)\n\n  await checkStudioDependencyVersions(workDir)\n\n  // If the check resulted in a dependency install, the CLI command will be re-run,\n  // thus we want to exit early\n  if ((await checkRequiredDependencies(context)).didInstall) {\n    return {didCompile: false}\n  }\n\n  const envVarKeys = getSanityEnvVars()\n  if (envVarKeys.length > 0) {\n    output.print(\n      '\\nIncluding the following environment variables as part of the JavaScript bundle:'\n    )\n    envVarKeys.forEach((key) => output.print(`- ${key}`))\n    output.print('')\n  }\n\n  let shouldClean = true\n  if (outputDir !== defaultOutputDir && !unattendedMode) {\n    shouldClean = await prompt.single({\n      type: 'confirm',\n      message: `Do you want to delete the existing directory (${outputDir}) first?`,\n      default: true,\n    })\n  }\n\n  let spin\n\n  if (shouldClean) {\n    timer.start('cleanOutputFolder')\n    spin = output.spinner('Clean output folder').start()\n    await rimraf(outputDir)\n    const cleanDuration = timer.end('cleanOutputFolder')\n    spin.text = `Clean output folder (${cleanDuration.toFixed()}ms)`\n    spin.succeed()\n  }\n\n  spin = output.spinner('Build Sanity Studio').start()\n\n  try {\n    timer.start('bundleStudio')\n    const bundle = await buildStaticFiles({\n      cwd: workDir,\n      outputDir,\n      basePath: overrides?.basePath || cliConfig?.project?.basePath || '/',\n      sourceMap: Boolean(flags['source-maps']),\n      minify: Boolean(flags.minify),\n      vite: cliConfig && 'vite' in cliConfig ? cliConfig.vite : undefined,\n    })\n    const buildDuration = timer.end('bundleStudio')\n\n    spin.text = `Build Sanity Studio (${buildDuration.toFixed()}ms)`\n    spin.succeed()\n\n    if (flags.stats) {\n      output.print('\\nLargest module files:')\n      output.print(formatModuleSizes(sortModulesBySize(bundle.chunks).slice(0, 15)))\n    }\n  } catch (err) {\n    spin.fail()\n    throw err\n  }\n\n  return {didCompile: true}\n}\n\n// eslint-disable-next-line no-process-env\nfunction getSanityEnvVars(env: Record<string, string | undefined> = process.env): string[] {\n  return Object.keys(env).filter((key) => key.toUpperCase().startsWith('SANITY_STUDIO_'))\n}\n\nfunction sortModulesBySize(chunks: ChunkStats[]): ChunkModule[] {\n  return chunks\n    .flatMap((chunk) => chunk.modules)\n    .sort((modA, modB) => modB.renderedLength - modA.renderedLength)\n}\n\nfunction formatModuleSizes(modules: ChunkModule[]): string {\n  const lines = []\n  for (const mod of modules) {\n    lines.push(` - ${formatModuleName(mod.name)} (${formatSize(mod.renderedLength)})`)\n  }\n\n  return lines.join('\\n')\n}\n\nfunction formatModuleName(modName: string): string {\n  const delimiter = '/node_modules/'\n  const nodeIndex = modName.lastIndexOf(delimiter)\n  return nodeIndex === -1 ? modName : modName.slice(nodeIndex + delimiter.length)\n}\n\nfunction formatSize(bytes: number): string {\n  return chalk.cyan(`${(bytes / 1024).toFixed()} kB`)\n}\n"],"names":["rimraf","promisify","rimrafCallback","buildSanityStudio","args","context","overrides","_a","timer","getTimer","output","prompt","workDir","cliConfig","flags","minify","stats","extOptions","unattendedMode","Boolean","yes","y","defaultOutputDir","path","resolve","join","outputDir","argsWithoutOptions","checkStudioDependencyVersions","checkRequiredDependencies","didInstall","didCompile","envVarKeys","getSanityEnvVars","length","print","forEach","key","shouldClean","single","type","message","default","spin","start","spinner","cleanDuration","end","text","toFixed","succeed","bundle","buildStaticFiles","cwd","basePath","project","sourceMap","vite","buildDuration","formatModuleSizes","sortModulesBySize","chunks","slice","err","fail","env","process","Object","keys","filter","toUpperCase","startsWith","flatMap","chunk","modules","sort","modA","modB","renderedLength","lines","mod","push","formatModuleName","name","formatSize","modName","delimiter","nodeIndex","lastIndexOf","bytes","chalk","cyan"],"mappings":"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"}