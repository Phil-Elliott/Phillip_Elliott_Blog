{"version":3,"file":"form.cjs","sources":["../src/form/studio/contexts/reviewChanges/useReviewChanges.ts","../src/form/studio/focusManagers/HashFocusManager.ts","../src/form/studio/focusManagers/SimpleFocusManager.ts","../src/form/members/ArrayOfObjectsMembers.tsx"],"sourcesContent":["import {useContext} from 'react'\nimport {ReviewChangesContext} from './ReviewChangesContext'\nimport {ReviewChangesContextValue} from './types'\n\n/**\n * @internal\n */\nexport function useReviewChanges(): ReviewChangesContextValue {\n  const reviewChanges = useContext(ReviewChangesContext)\n\n  if (!reviewChanges) {\n    throw new Error('Review changes: missing context value')\n  }\n\n  return reviewChanges\n}\n","/* eslint-disable react/no-unused-prop-types */\n\nimport {Path} from '@sanity/types'\nimport React from 'react'\nimport {decodePath, encodePath} from '../../utils/path'\n\nexport type HashFocusManagerChildArgs = {\n  onFocus: (path: Path) => void\n  onBlur: () => void\n  focusPath: Path\n}\n\nexport interface HashFocusManagerProps {\n  focusPath: any | null\n  onFocus: () => void\n  onBlur: () => void\n  children: (arg0: HashFocusManagerChildArgs) => any\n}\n\nexport interface HashFocusManagerState {\n  focusPath: Array<any>\n}\n\nfunction getHash() {\n  return decodeURIComponent(document.location.hash.substring(1))\n}\n\nfunction getPathFromHash() {\n  const hash = getHash()\n  return hash ? decodePath(hash) : []\n}\n\n/**\n * An example of how to sync focus path through document.location.hash\n */\nexport class HashFocusManager extends React.Component<\n  HashFocusManagerProps,\n  HashFocusManagerState\n> {\n  state = {\n    focusPath: getPathFromHash(),\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', this.handleHashChange, false)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('hashchange', this.handleHashChange, false)\n  }\n\n  handleHashChange = () => {\n    this.setState({focusPath: getPathFromHash()})\n  }\n\n  handleFocus = (focusPath: Path) => {\n    document.location.hash = encodePath(focusPath)\n  }\n\n  handleBlur = () => {\n    // this.setState({focusPath: []})\n  }\n\n  render() {\n    return this.props.children({\n      onBlur: this.handleBlur,\n      onFocus: this.handleFocus,\n      focusPath: this.state.focusPath,\n    })\n  }\n}\n","/* eslint-disable react/no-unused-prop-types */\n\n// A simple focus path manager\n\nimport React from 'react'\nimport {Path} from '@sanity/types'\n\nexport interface SimpleFocusManagerProps {\n  path: any | null\n  onFocus: () => void\n  onBlur: () => void\n  children: (arg: any) => any\n}\n\nexport interface SimpleFocusManagerState {\n  focusPath: Array<any>\n}\n\nexport class SimpleFocusManager extends React.Component<\n  SimpleFocusManagerProps,\n  SimpleFocusManagerState\n> {\n  state = {\n    focusPath: [],\n  }\n\n  handleFocus = (path: Path) => {\n    this.setState({focusPath: path})\n  }\n\n  handleBlur = () => {\n    // do nothing\n  }\n\n  render() {\n    return this.props.children({\n      onBlur: this.handleBlur,\n      onFocus: this.handleFocus,\n      focusPath: this.state.focusPath,\n    })\n  }\n}\n","import React from 'react'\nimport {ArrayOfObjectsMember} from '../store'\nimport {\n  RenderArrayOfObjectsItemCallback,\n  RenderFieldCallback,\n  RenderInputCallback,\n  RenderPreviewCallback,\n} from '../types'\n\nimport {ArrayOfObjectsItem} from './items/ArrayOfObjectsItem'\nimport {MemberItemError} from './MemberItemError'\n\nexport interface ArrayOfObjectsMembersProps {\n  members: ArrayOfObjectsMember[]\n  renderInput: RenderInputCallback\n  renderField: RenderFieldCallback\n  renderItem: RenderArrayOfObjectsItemCallback\n  renderPreview: RenderPreviewCallback\n}\n\n/**\n * Convenience component for wrapping an array of objects\n * @beta\n */\nexport function ArrayOfObjectsMembers(props: ArrayOfObjectsMembersProps) {\n  const {members, renderInput, renderField, renderItem, renderPreview} = props\n  return (\n    <>\n      {members.map((member) => {\n        if (member.kind === 'item') {\n          return (\n            <ArrayOfObjectsItem\n              key={member.key}\n              member={member}\n              renderInput={renderInput}\n              renderField={renderField}\n              renderItem={renderItem}\n              renderPreview={renderPreview}\n            />\n          )\n        }\n        if (member.kind === 'error') {\n          return <MemberItemError key={member.key} member={member} />\n        }\n\n        //@ts-expect-error The branching above should cover all possible cases\n        console.warn(new Error(`Unhandled member kind ${member.kind}`))\n        return null\n      })}\n    </>\n  )\n}\n"],"names":["useReviewChanges","reviewChanges","useContext","ReviewChangesContext","Error","getHash","decodeURIComponent","document","location","hash","substring","getPathFromHash","decodePath","HashFocusManager","React","Component","constructor","arguments","state","focusPath","handleHashChange","setState","handleFocus","encodePath","handleBlur","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","props","children","onBlur","onFocus","SimpleFocusManager","path","ArrayOfObjectsMembers","members","renderInput","renderField","renderItem","renderPreview","jsx","Fragment","map","member","kind","ArrayOfObjectsItem","key","MemberItemError","console","warn"],"mappings":"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"}