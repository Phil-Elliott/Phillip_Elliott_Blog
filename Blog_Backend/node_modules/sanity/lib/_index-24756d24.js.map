{"version":3,"file":"_index-24756d24.js","sources":["../src/desk/panes/documentList/constants.ts","../src/desk/panes/documentList/helpers.ts","../src/desk/panes/documentList/DocumentListPaneContent.tsx","../src/desk/panes/documentList/DocumentListPaneHeader.tsx","../src/desk/panes/documentList/getQueryResults.ts","../src/desk/panes/documentList/useDocumentList.ts","../src/desk/panes/documentList/DocumentListPane.tsx"],"sourcesContent":["import {SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_createdAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n","import * as PathUtils from '@sanity/util/paths'\nimport {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  ObjectField,\n  ObjectFieldType,\n  ObjectSchemaType,\n  SanityDocument,\n  SchemaType,\n} from '@sanity/types'\nimport {getPublishedId, collate} from '../../../util'\nimport {DocumentListPaneItem, SortOrder, SortOrderBy} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocument[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft: !!entry.draft,\n    }\n  }) as any\n}\n\nconst RE_TYPE_NAME_IN_FILTER =\n  /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type\\b/\nexport function getTypeNameFromSingleTypeFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string | null {\n  const matches = filter.match(RE_TYPE_NAME_IN_FILTER)\n\n  if (!matches) {\n    return null\n  }\n\n  const match = (matches[1] || matches[2]).trim().replace(/^[\"']|[\"']$/g, '')\n\n  if (match[0] === '$') {\n    const k = match.slice(1)\n    const v = params[k]\n\n    return typeof v === 'string' ? v : null\n  }\n\n  return match\n}\n\nexport function isSimpleTypeFilter(filter: string): boolean {\n  return /^_type\\s*==\\s*['\"$]\\w+['\"]?\\s*$/.test(filter.trim())\n}\n\nexport function toOrderClause(orderBy: SortOrderBy[]): string {\n  return orderBy\n    .map((ordering) =>\n      [wrapFieldWithFn(ordering), (ordering.direction || '').toLowerCase()]\n        .map((str) => str.trim())\n        .filter(Boolean)\n        .join(' ')\n    )\n    .join(',')\n}\n\nfunction wrapFieldWithFn(ordering: SortOrderBy): string {\n  return ordering.mapWith ? `${ordering.mapWith}(${ordering.field})` : ordering.field\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n","import {SyncIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Card,\n  Container,\n  Flex,\n  Heading,\n  Spinner,\n  Stack,\n  Text,\n  VirtualList,\n  VirtualListChangeOpts,\n} from '@sanity/ui'\nimport React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {SanityDocument} from '@sanity/types'\nimport {Delay, PaneContent, usePane, usePaneLayout, PaneItem} from '../../components'\nimport {useSchema} from '../../../hooks'\nimport {getPublishedId} from '../../../util'\nimport {GeneralPreviewLayoutKey} from '../../../components/previews'\nimport {DocumentListPaneItem} from './types'\nimport {getDocumentKey} from './helpers'\nimport {FULL_LIST_LIMIT} from './constants'\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeContraint: boolean\n  fullList: boolean\n  isActive?: boolean\n  isLoading: boolean\n  items: DocumentListPaneItem[] | null\n  layout?: GeneralPreviewLayoutKey\n  onListChange: (opts: VirtualListChangeOpts) => void\n  onRetry?: (event: unknown) => void\n  showIcons: boolean\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    filterIsSimpleTypeContraint,\n    fullList,\n    isActive,\n    isLoading,\n    items,\n    layout,\n    onListChange,\n    onRetry,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed])\n\n  const renderItem = useCallback(\n    (item: SanityDocument) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n\n      return (\n        <PaneItem\n          icon={showIcons === false ? false : undefined}\n          id={publishedId}\n          pressed={pressed}\n          selected={selected}\n          layout={layout}\n          schemaType={schema.get(item._type)}\n          value={item}\n        />\n      )\n    },\n    [childItemId, isActive, layout, schema, showIcons]\n  )\n\n  const content = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">Could not fetch list items</Heading>\n              <Text as=\"p\">\n                Error: <code>{error.message}</code>\n              </Text>\n              {onRetry && (\n                <Box>\n                  {/* eslint-disable-next-line react/jsx-handler-names */}\n                  <Button icon={SyncIcon} onClick={onRetry} text=\"Retry\" tone=\"primary\" />\n                </Box>\n              )}\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (items === null) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Delay ms={300}>\n            <>\n              <Spinner muted />\n              <Box marginTop={3}>\n                <Text align=\"center\" muted size={1}>\n                  Loading documentsâ€¦\n                </Text>\n              </Box>\n            </>\n          </Delay>\n        </Flex>\n      )\n    }\n\n    if (!isLoading && items.length === 0) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted size={2}>\n                {filterIsSimpleTypeContraint\n                  ? 'No documents of this type'\n                  : 'No matching documents'}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    const hasMoreItems = fullList && items.length === FULL_LIST_LIMIT\n\n    return (\n      <Box padding={2}>\n        {items.length > 0 && (\n          <VirtualList\n            gap={1}\n            getItemKey={getDocumentKey}\n            items={items}\n            renderItem={renderItem}\n            onChange={onListChange}\n            // prevents bug when panes won't render if first rendered while collapsed\n            key={`${index}-${collapsed}`}\n          />\n        )}\n\n        {isLoading && (\n          <Card borderTop marginTop={1} paddingX={3} paddingY={4}>\n            <Text align=\"center\" muted size={1}>\n              Loadingâ€¦\n            </Text>\n          </Card>\n        )}\n\n        {hasMoreItems && (\n          <Card marginTop={1} paddingX={3} paddingY={4} radius={2} tone=\"transparent\">\n            <Text align=\"center\" muted size={1}>\n              Displaying a maximum of {FULL_LIST_LIMIT} documents\n            </Text>\n          </Card>\n        )}\n      </Box>\n    )\n  }, [\n    error,\n    filterIsSimpleTypeContraint,\n    fullList,\n    onListChange,\n    isLoading,\n    items,\n    onRetry,\n    renderItem,\n    shouldRender,\n    collapsed,\n    index,\n  ])\n\n  return <PaneContent overflow={layoutCollapsed ? undefined : 'auto'}>{content}</PaneContent>\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {Button} from '@sanity/ui'\nimport React, {memo, useMemo} from 'react'\nimport {GeneralPreviewLayoutKey} from '../../../components/previews'\nimport {InitialValueTemplateItem} from '../../../templates'\nimport {PaneMenuItem, PaneMenuItemGroup, DeskToolPaneActionHandler} from '../../types'\nimport {BackLink, PaneHeader, PaneHeaderActions} from '../../components'\nimport {useDeskTool} from '../../useDeskTool'\nimport {SortOrder} from './types'\n\ninterface DocumentListPaneHeaderProps {\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const DocumentListPaneHeader = memo(\n  ({\n    index,\n    initialValueTemplates = [],\n    menuItems = [],\n    menuItemGroups = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: DocumentListPaneHeaderProps) => {\n    const {features} = useDeskTool()\n\n    const actionHandlers = useMemo((): Record<string, DeskToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <PaneHeader\n        backButton={\n          features.backButton &&\n          index > 0 && <Button as={BackLink} data-as=\"a\" icon={ArrowLeftIcon} mode=\"bleed\" />\n        }\n        title={title}\n        actions={\n          <PaneHeaderActions\n            initialValueTemplateItems={initialValueTemplates}\n            actionHandlers={actionHandlers}\n            menuItemGroups={menuItemGroups}\n            menuItems={menuItems}\n          />\n        }\n      />\n    )\n  }\n)\n\nDocumentListPaneHeader.displayName = 'DocumentListPaneHeader'\n","import {SanityClient} from '@sanity/client'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  mergeMapTo,\n  startWith,\n  switchMap,\n  take,\n  scan,\n  delay,\n  takeUntil,\n  share,\n  publishReplay,\n  refCount,\n} from 'rxjs/operators'\nimport {concat, merge, of, fromEvent, Observable, Subject} from 'rxjs'\nimport deepEquals from 'react-fast-compare'\nimport {SanityDocument} from '@sanity/types'\nimport {listenQuery} from '../../../datastores'\n\nconst INITIAL_CHILD_PROPS = {\n  result: null,\n  error: false,\n}\n\nconst createResultChildProps = (documents: SanityDocument[]) => ({\n  result: {documents},\n  loading: false,\n  error: false,\n})\n\nconst createErrorChildProps = (error: Error) => ({\n  result: null,\n  loading: false,\n  error,\n})\n\nexport const getQueryResults = (\n  receivedProps$: Observable<{client: SanityClient; query: string; params: Record<string, any>}>,\n  options = {}\n) => {\n  const onRetry$ = new Subject()\n  const onRetry = onRetry$.next.bind(onRetry$)\n\n  const queryProps$ = receivedProps$.pipe(\n    map((props) => ({client: props.client, query: props.query, params: props.params})),\n    distinctUntilChanged(deepEquals),\n    publishReplay(1),\n    refCount()\n  )\n\n  const queryResults$ = queryProps$.pipe(\n    switchMap((queryProps) => {\n      const query$ = listenQuery(\n        queryProps.client,\n        queryProps.query,\n        queryProps.params,\n        options\n      ).pipe(map(createResultChildProps), share())\n      return merge(of({loading: true}).pipe(delay(400), takeUntil(query$)), query$)\n    })\n  )\n\n  return queryResults$.pipe(\n    startWith(INITIAL_CHILD_PROPS),\n    catchError((err, caught$) =>\n      concat(\n        of(createErrorChildProps(err)),\n        merge(fromEvent(window, 'online'), onRetry$).pipe(take(1), mergeMapTo(caught$))\n      )\n    ),\n    scan((prev, next) => ({...prev, ...next, onRetry}))\n  )\n}\n","import {VirtualListChangeOpts} from '@sanity/ui'\nimport {useEffect, useState, useCallback, useMemo, useRef} from 'react'\nimport {of} from 'rxjs'\nimport {filter as filterEvents} from 'rxjs/operators'\nimport {useClient} from '../../../hooks'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS} from '../../../studioClient'\nimport {DocumentListPaneItem, QueryResult, SortOrder, SortOrderBy} from './types'\nimport {removePublishedWithDrafts, toOrderClause} from './helpers'\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {getQueryResults} from './getQueryResults'\n\ninterface UseDocumentListOpts {\n  defaultOrdering: SortOrderBy[]\n  filter: string\n  params: Record<string, unknown>\n  sortOrder?: SortOrder\n  apiVersion?: string\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  fullList: boolean\n  handleListChange: ({toIndex}: VirtualListChangeOpts) => void\n  isLoading: boolean\n  items: DocumentListPaneItem[] | null\n  onRetry?: (event: unknown) => void\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): DocumentListState {\n  const {apiVersion, defaultOrdering, filter, params, sortOrder} = opts\n  const client = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n  const [fullList, setFullList] = useState(false)\n  const fullListRef = useRef(fullList)\n  const [result, setResult] = useState<QueryResult | null>(null)\n  const error = result?.error || null\n  const isLoading = result?.loading || result === null\n  const onRetry = result?.onRetry\n  const documents = result?.result?.documents\n  const items = useMemo(\n    () => (documents ? removePublishedWithDrafts(documents) : null),\n    [documents]\n  )\n\n  const query = useMemo(() => {\n    const extendedProjection = sortOrder?.extendedProjection\n    const projectionFields = ['_id', '_type']\n    const finalProjection = projectionFields.join(',')\n    const sortBy = defaultOrdering || sortOrder?.by || []\n    const limit = fullList ? FULL_LIST_LIMIT : PARTIAL_PAGE_LIMIT\n    const sort = sortBy.length > 0 ? sortBy : DEFAULT_ORDERING.by\n    const order = toOrderClause(sort)\n\n    if (extendedProjection) {\n      const firstProjection = projectionFields.concat(extendedProjection).join(',')\n      return [\n        `*[${filter}] {${firstProjection}}`,\n        `order(${order}) [0...${limit}]`,\n        `{${finalProjection}}`,\n      ].join('|')\n    }\n\n    return `*[${filter}]|order(${order})[0...${limit}]{${finalProjection}}`\n  }, [defaultOrdering, filter, fullList, sortOrder])\n\n  const handleListChange = useCallback(\n    ({toIndex}: VirtualListChangeOpts) => {\n      if (isLoading || fullListRef.current) {\n        return\n      }\n\n      if (toIndex >= PARTIAL_PAGE_LIMIT / 2) {\n        setFullList(true)\n\n        // Prevent change handler from firing again before setState kicks in\n        fullListRef.current = true\n      }\n    },\n    [isLoading]\n  )\n\n  // Set up the document list listener\n  useEffect(() => {\n    // @todo: explain what this does\n    const filterFn = fullList\n      ? (queryResult: {result: QueryResult | null}) => Boolean(queryResult.result)\n      : () => true\n\n    // Set loading state\n    setResult((r) => (r ? {...r, loading: true} : null))\n\n    const queryResults$ = getQueryResults(of({client, query, params}), {\n      apiVersion,\n      tag: 'desk.document-list',\n    }).pipe(filterEvents(filterFn) as any)\n\n    const sub = queryResults$.subscribe(setResult as any)\n\n    return () => sub.unsubscribe()\n  }, [apiVersion, client, fullList, query, params])\n\n  // If `filter` or `params` changed, set up a new query from scratch.\n  // If `sortOrder` changed, set up a new query from scratch as well.\n  useEffect(() => {\n    setResult(null)\n    setFullList(false)\n    fullListRef.current = false\n  }, [filter, params, sortOrder, apiVersion])\n\n  return {error, fullList, handleListChange, isLoading, items, onRetry}\n}\n","import React, {memo, useMemo, useRef} from 'react'\nimport {Card, Code} from '@sanity/ui'\nimport shallowEquals from 'shallow-equals'\nimport {GeneralPreviewLayoutKey} from '../../../components/previews'\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {useUnique} from '../../../util'\nimport {useDeskToolSetting} from '../../useDeskToolSetting'\nimport {BaseDeskToolPaneProps} from '../types'\nimport {useSchema} from '../../../hooks'\nimport {useSource, SourceProvider} from '../../../studio'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {\n  applyOrderingFunctions,\n  getTypeNameFromSingleTypeFilter,\n  isSimpleTypeFilter,\n} from './helpers'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {DocumentListPaneHeader} from './DocumentListPaneHeader'\nimport {SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\ntype DocumentListPaneProps = BaseDeskToolPaneProps<'documentList'>\n\nconst emptyArray: never[] = []\n\nfunction useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const valueRef = useRef<ValueType>(value)\n  if (!shallowEquals(valueRef.current, value)) {\n    valueRef.current = value\n  }\n  return valueRef.current\n}\n\n/**\n * @internal\n */\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, index, isActive, isSelected, pane, paneKey} = props\n  const schema = useSchema()\n  const {name: parentSourceName} = useSource()\n  const {\n    defaultLayout = 'default',\n    displayOptions,\n    initialValueTemplates = emptyArray,\n    menuItems,\n    menuItemGroups,\n    options,\n    title,\n  } = pane\n  const {apiVersion, defaultOrdering = emptyArray, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => getTypeNameFromSingleTypeFilter(filter, params), [filter, params])\n  const showIcons = displayOptions?.showIcons !== false\n  const [layout, setLayout] = useDeskToolSetting<GeneralPreviewLayoutKey>(\n    typeName,\n    'layout',\n    defaultLayout\n  )\n  const [sortOrderRaw, setSortOrder] = useDeskToolSetting<SortOrder>(\n    typeName,\n    'sortOrder',\n    DEFAULT_ORDERING\n  )\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n  const filterIsSimpleTypeContraint = isSimpleTypeFilter(filter)\n\n  const {error, fullList, handleListChange, isLoading, items, onRetry} = useDocumentList({\n    defaultOrdering,\n    filter,\n    params,\n    sortOrder,\n    apiVersion,\n  })\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane currentMaxWidth={350} id={paneKey} maxWidth={640} minWidth={320} selected={isSelected}>\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <DocumentListPaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItems={menuItems}\n          menuItemGroups={menuItemGroups}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n\n        <DocumentListPaneContent\n          childItemId={childItemId}\n          error={error}\n          filterIsSimpleTypeContraint={filterIsSimpleTypeContraint}\n          fullList={fullList}\n          isActive={isActive}\n          isLoading={isLoading}\n          items={items}\n          layout={layout}\n          onListChange={handleListChange}\n          onRetry={onRetry}\n          showIcons={showIcons}\n        />\n      </Pane>\n    </SourceProvider>\n  )\n})\n"],"names":["PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","direction","EMPTY_RECORD","getDocumentKey","value","index","_id","getPublishedId","removePublishedWithDrafts","documents","collate","map","entry","doc","draft","published","hasPublished","hasDraft","RE_TYPE_NAME_IN_FILTER","getTypeNameFromSingleTypeFilter","filter","params","matches","match","trim","replace","k","slice","v","isSimpleTypeFilter","test","toOrderClause","orderBy","ordering","wrapFieldWithFn","toLowerCase","str","Boolean","join","mapWith","applyOrderingFunctions","order","schemaType","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","every","item","baseType","path","pathSegments","PathUtils","fromString","current","segment","getFieldTypeByName","isArrayAccessor","isKeySegment","isIndexSegment","memberType","otherType","of","isReferenceSchemaType","refType","otherRefType","to","type","fieldName","fields","find","name","ofType","DocumentListPaneContent","props","childItemId","error","filterIsSimpleTypeContraint","fullList","isActive","isLoading","items","layout","onListChange","onRetry","showIcons","schema","useSchema","collapsed","layoutCollapsed","usePaneLayout","usePane","shouldRender","setShouldRender","useState","useEffect","timer","setTimeout","clearTimeout","renderItem","useCallback","publishedId","isSelected","pressed","selected","jsx","PaneItem","icon","id","get","_type","content","useMemo","Flex","align","height","justify","children","Container","width","jsxs","Stack","paddingX","paddingY","space","Heading","as","Text","message","Box","Button","SyncIcon","onClick","text","tone","Delay","ms","Fragment","Spinner","muted","marginTop","size","length","hasMoreItems","padding","VirtualList","gap","getItemKey","onChange","Card","borderTop","radius","PaneContent","overflow","DocumentListPaneHeader","memo","initialValueTemplates","menuItems","menuItemGroups","setLayout","setSortOrder","title","features","useDeskTool","actionHandlers","sort","PaneHeader","backButton","BackLink","ArrowLeftIcon","mode","actions","PaneHeaderActions","initialValueTemplateItems","displayName","INITIAL_CHILD_PROPS","result","createResultChildProps","loading","createErrorChildProps","getQueryResults","receivedProps$","options","onRetry$","Subject","next","bind","queryProps$","pipe","client","query","distinctUntilChanged","deepEquals","publishReplay","refCount","queryResults$","switchMap","queryProps","query$","listenQuery","share","merge","delay","takeUntil","startWith","catchError","err","caught$","concat","fromEvent","window","take","mergeMapTo","scan","prev","useDocumentList","opts","_a","apiVersion","defaultOrdering","sortOrder","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","setFullList","fullListRef","useRef","setResult","extendedProjection","projectionFields","finalProjection","sortBy","limit","firstProjection","handleListChange","toIndex","filterFn","queryResult","r","tag","filterEvents","sub","subscribe","unsubscribe","emptyArray","useShallowUnique","valueRef","shallowEquals","DocumentListPane","pane","paneKey","parentSourceName","useSource","defaultLayout","displayOptions","sourceName","source","typeName","useDeskToolSetting","sortOrderRaw","sortWithOrderingFn","useUnique","SourceProvider","Pane","currentMaxWidth","maxWidth","minWidth","_DEBUG"],"mappings":"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"}