const _excluded = ["index", "pane", "paneKey"],
      _excluded2 = ["child", "component", "menuItems", "menuItemGroups", "title", "type", "__preserveInstance"];

var _templateObject;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { jsx, jsxs } from 'react/jsx-runtime';
import { useState, createElement, isValidElement } from 'react';
import { isValidElementType } from 'react-is';
import '@reach/auto-id';
import { ArrowLeftIcon } from '@sanity/icons';
import { Button, Box } from '@sanity/ui';
import { dE as useDeskTool, dF as PaneHeader, dG as PaneHeaderActions, dH as BackLink, dI as usePane, cW as usePaneRouter, dJ as Pane } from './_prepareConfig-56d87958.js';
import 'lodash';
import 'react-rx';
import 'rxjs';
import 'rxjs/operators';
import 'shallow-equals';
import 'history';
import '@sanity/bifur-client';
import '@sanity/schema';
import '@sanity/schema/_internal';
import '@sanity/validation';
import 'date-fns';
import 'pluralize-esm';
import '@sanity/image-url';
import '@sanity/types';
import '@sanity/mutator';
import 'json-reduce';
import 'rxjs-exhaustmap-with-trailing';
import '@sanity/util/content';
import '@sanity/util/paths';
import 'dataloader';
import 'raf';
import 'groq-js';
import 'rxjs-etc/operators';
import 'mendoza';
import '@sanity/diff';
import '@sanity/color';
import 'react-fast-compare';
import '@sanity/portable-text-editor';
import 'scroll-into-view-if-needed';
import '@sanity/util/legacyDateFormat';
import 'speakingurl';
import '@sanity/uuid';
import 'get-random-values-esm';
import '@sanity/asset-utils';
import 'exif-component';
import 'react-dom';
import 'nanoid';
import '@sanity/generate-help-url';
import styled from 'styled-components';
import '@sanity/client';
import '@juggle/resize-observer';
import 'nano-pubsub';
import 'observable-callback';
import 'debug';
import 'react-refractor';
import 'refractor/lang/bash';
import 'refractor/lang/javascript';
import 'refractor/lang/json';
import 'refractor/lang/jsx';
import 'refractor/lang/typescript';
import 'use-hot-module-reload';
import 'classnames';
import 'use-device-pixel-ratio';
import 'color2k';
import 'react-sortable-hoc';
import '@sanity/block-tools';
import 'diff-match-patch';
import 'date-fns/isValid';
import 'react-focus-lock';
import 'date-fns/formatDistanceToNow';
import 'is-hotkey';
import 'react-copy-to-clipboard';
import 'sanity-diff-patch';
import '@rexxars/react-json-inspector';
import 'hashlru';
import 'framer-motion';
import 'react-props-stream';
import '@sanity/logos';
import '@portabletext/react';

function UserComponentPaneHeader(props) {
  const {
    actionHandlers,
    index,
    menuItems,
    menuItemGroups,
    title
  } = props;
  const {
    features
  } = useDeskTool();

  if (!(menuItems == null ? void 0 : menuItems.length) && !title) {
    return null;
  }

  return /* @__PURE__ */jsx(PaneHeader, {
    actions: /* @__PURE__ */jsx(PaneHeaderActions, {
      menuItems,
      menuItemGroups,
      actionHandlers
    }),
    backButton: features.backButton && index > 0 && /* @__PURE__ */jsx(Button, {
      as: BackLink,
      "data-as": "a",
      icon: ArrowLeftIcon,
      mode: "bleed"
    }),
    title
  });
}

const Root = styled(Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: relative;\n"])));

function UserComponentPaneContent(props) {
  const {
    children
  } = props;
  const {
    collapsed
  } = usePane();
  return /* @__PURE__ */jsx(Root, {
    hidden: collapsed,
    height: "fill",
    overflow: "auto",
    children
  });
}

function UserComponentPane(props) {
  const {
    index,
    pane,
    paneKey
  } = props,
        restProps = _objectWithoutProperties(props, _excluded);

  const {
    params
  } = usePaneRouter();

  const {
    child,
    component,
    menuItems,
    menuItemGroups,
    title = "",
    type: _unused,
    __preserveInstance = false
  } = pane,
        restPane = _objectWithoutProperties(pane, _excluded2);

  const [ref, setRef] = useState(null);
  return /* @__PURE__ */jsxs(Pane, {
    id: paneKey,
    minWidth: 320,
    selected: restProps.isSelected,
    children: [/* @__PURE__ */jsx(UserComponentPaneHeader, {
      actionHandlers: ref == null ? void 0 : ref.actionHandlers,
      index,
      menuItems,
      menuItemGroups,
      title
    }), /* @__PURE__ */jsxs(UserComponentPaneContent, {
      children: [isValidElementType(component) && createElement(component, _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, !__preserveInstance && {
        key: "".concat(restProps.itemId, "-").concat(restProps.childItemId)
      }), restProps), restPane), {
        ref: setRef
      }), {}, {
        child,
        paneKey,
        urlParams: params
      })), isValidElement(component) && component]
    })]
  });
}

export { UserComponentPane as default };
//# sourceMappingURL=_index-15f14004.js.map
