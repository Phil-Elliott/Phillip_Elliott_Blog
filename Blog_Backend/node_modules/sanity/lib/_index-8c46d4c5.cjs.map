{"version":3,"file":"_index-8c46d4c5.cjs","sources":["../src/desk/panes/list/ListPane.tsx"],"sourcesContent":["import React from 'react'\nimport {Box, Button, Card, Code, Stack} from '@sanity/ui'\nimport styled from 'styled-components'\nimport {ArrowLeftIcon} from '@sanity/icons'\nimport {PaneListItem} from '../../types'\nimport {\n  Pane,\n  PaneContent,\n  PaneHeader,\n  usePaneLayout,\n  PaneHeaderActions,\n  BackLink,\n  PaneItem,\n} from '../../components'\nimport {BaseDeskToolPaneProps} from '../types'\nimport {_DEBUG} from '../../constants'\nimport {useDeskTool} from '../../useDeskTool'\n\ntype ListPaneProps = BaseDeskToolPaneProps<'list'>\n\nconst Divider = styled.hr`\n  background-color: var(--card-border-color);\n  height: 1px;\n  margin: 0;\n  border: none;\n`\n\n/**\n * @internal\n */\nexport function ListPane(props: ListPaneProps) {\n  const {childItemId, index, isActive, isSelected, pane, paneKey} = props\n  const {features} = useDeskTool()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {defaultLayout, displayOptions, items, menuItems, menuItemGroups, title} = pane\n  const paneShowIcons = displayOptions?.showIcons\n\n  const shouldShowIconForItem = (item: PaneListItem): boolean => {\n    const itemShowIcon = item.displayOptions?.showIcon\n\n    // Specific true/false on item should have precedence over list setting\n    if (typeof itemShowIcon !== 'undefined') {\n      return itemShowIcon !== false // Boolean(item.icon)\n    }\n\n    // If no item setting is defined, defer to the pane settings\n    return paneShowIcons !== false // Boolean(item.icon)\n  }\n\n  return (\n    <Pane\n      currentMaxWidth={350}\n      data-testid=\"desk-tool-list-pane\"\n      id={paneKey}\n      maxWidth={640}\n      minWidth={320}\n      selected={isSelected}\n    >\n      {_DEBUG && (\n        <Card padding={4} tone=\"transparent\">\n          <Code>{pane.source || '(none)'}</Code>\n        </Card>\n      )}\n\n      <PaneHeader\n        actions={<PaneHeaderActions menuItems={menuItems} menuItemGroups={menuItemGroups} />}\n        backButton={\n          features.backButton &&\n          index > 0 && <Button as={BackLink} data-as=\"a\" icon={ArrowLeftIcon} mode=\"bleed\" />\n        }\n        title={title}\n      />\n\n      <PaneContent overflow={layoutCollapsed ? undefined : 'auto'}>\n        <Stack padding={2} space={1}>\n          {items &&\n            items.map((item, itemIndex) => {\n              if (item.type === 'divider') {\n                return (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <Box key={`divider-${itemIndex}`} paddingY={1}>\n                    <Divider />\n                  </Box>\n                )\n              }\n\n              const pressed = !isActive && childItemId === item.id\n              const selected = isActive && childItemId === item.id\n\n              return (\n                <PaneItem\n                  icon={shouldShowIconForItem(item) ? item.icon : false}\n                  id={item.id}\n                  key={item.id}\n                  layout={defaultLayout}\n                  pressed={pressed}\n                  schemaType={item.schemaType}\n                  selected={selected}\n                  title={item.title}\n                  value={\n                    // If this is a document list item, pass on the ID and type,\n                    // otherwise leave it undefined to use the passed title and gang\n                    item._id && item.schemaType\n                      ? {_id: item._id, _type: item.schemaType.name, title: item.title}\n                      : undefined\n                  }\n                />\n              )\n            })}\n        </Stack>\n      </PaneContent>\n    </Pane>\n  )\n}\n"],"names":["Divider","styled","hr","ListPane","props","childItemId","index","isActive","isSelected","pane","paneKey","features","useDeskTool","collapsed","layoutCollapsed","usePaneLayout","defaultLayout","displayOptions","items","menuItems","menuItemGroups","title","paneShowIcons","showIcons","shouldShowIconForItem","item","_a","itemShowIcon","showIcon","jsxs","Pane","currentMaxWidth","id","maxWidth","minWidth","selected","children","_DEBUG","jsx","PaneHeader","actions","PaneHeaderActions","backButton","Button","as","BackLink","icon","ArrowLeftIcon","mode","PaneContent","overflow","Stack","padding","space","map","itemIndex","type","Box","paddingY","pressed","PaneItem","layout","schemaType","value","_id","_type","name"],"mappings":"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"}