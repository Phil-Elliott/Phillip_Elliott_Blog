import {createPlugin as $jPEKE$createPlugin, useClient as $jPEKE$useClient} from "sanity";
import {jsx as $jPEKE$jsx, jsxs as $jPEKE$jsxs} from "react/jsx-runtime";
import $jPEKE$react, {useRef as $jPEKE$useRef, useCallback as $jPEKE$useCallback, useEffect as $jPEKE$useEffect} from "react";
import $jPEKE$reactphotoalbum from "react-photo-album";
import $jPEKE$lodashflatten from "lodash/flatten";
import {BehaviorSubject as $jPEKE$BehaviorSubject, defer as $jPEKE$defer, concat as $jPEKE$concat} from "rxjs";
import {Dialog as $jPEKE$Dialog, Stack as $jPEKE$Stack, Card as $jPEKE$Card, Text as $jPEKE$Text, TextInput as $jPEKE$TextInput, Flex as $jPEKE$Flex, Spinner as $jPEKE$Spinner, useTheme as $jPEKE$useTheme} from "@sanity/ui";
import $jPEKE$reactinfinitescrollcomponent from "react-infinite-scroll-component";
import $jPEKE$styledcomponents from "styled-components";
import {withLatestFrom as $jPEKE$withLatestFrom, debounceTime as $jPEKE$debounceTime, distinctUntilChanged as $jPEKE$distinctUntilChanged, switchMap as $jPEKE$switchMap, map as $jPEKE$map} from "rxjs/operators";











const $2eb3d34edc401dab$export$be92b6f5f03c0fe9 = (0, $jPEKE$styledcomponents).div`
  overflow: hidden;
  background-origin: content-box;
  background-repeat: no-repeat;
  background-clip: border-box;
  background-size: cover;
  position: relative;
  outline: none !important;
  border: ${({ studioTheme: studioTheme  })=>`1px solid ${studioTheme.color.card.enabled.border}`};
  box-sizing: content-box;
  user-drag: none;

  &:hover {
    opacity: 0.85;
  }

  &:focus,
  &:active {
    border: 1px solid var(--input-border-color-focus);
    box-shadow: inset 0 0 0 3px var(--input-border-color-focus);
  }
`;
const $2eb3d34edc401dab$export$efa8bdf03adcbcab = (0, $jPEKE$styledcomponents).a`
  text-decoration: none;
  cursor: pointer;
`;
const $2eb3d34edc401dab$export$ac05e79a4174af5c = (0, $jPEKE$styledcomponents)((0, $jPEKE$Card))`
  ${({ theme: theme  })=>`
     --creditline-fg: ${theme.sanity.color.card.enabled.fg};
     --creditline-bg: ${theme.sanity.color.card.enabled.bg};
   `};
  user-drag: none;
  position: absolute;
  background-color: var(--creditline-bg);
  bottom: 0;

  [data-ui='Text'] {
    color: var(--creditline-fg);
  }
`;


const $3e8dc0ce4c147379$var$UTM_SOURCE = "sanity-plugin-asset-source-unsplash";
function $3e8dc0ce4c147379$export$2e2bcd8739ae039(props) {
    const { onClick: onClick , data: data , onKeyDown: onKeyDown , onFocus: onFocus , active: active , width: width , height: height  } = props;
    const rootElm = (0, $jPEKE$useRef)(null);
    const prevActive = (0, $jPEKE$useRef)(false);
    const handleClick = (0, $jPEKE$useCallback)(()=>{
        onClick(data);
    }, [
        onClick,
        data
    ]);
    const handleCreditLineClicked = (0, $jPEKE$useCallback)((event)=>{
        event.stopPropagation();
        const url = `${data.links.html}?utm_source=${encodeURIComponent($3e8dc0ce4c147379$var$UTM_SOURCE)}&utm_medium=referral`;
        window.open(url, data.id, "noreferrer,noopener");
    }, [
        data
    ]);
    const handleKeyDown = (0, $jPEKE$useCallback)((event)=>{
        onKeyDown(event);
        if (event.keyCode === 13) onClick(data);
    }, [
        onKeyDown,
        data,
        onClick
    ]);
    const handleMouseDown = (0, $jPEKE$useCallback)(()=>{
        onFocus(data);
    }, [
        onFocus,
        data
    ]);
    (0, $jPEKE$useEffect)(()=>{
        if (!prevActive.current && active && rootElm.current) {
            rootElm.current.focus();
            onFocus(data);
        }
        prevActive.current = active;
    // data changing alone should not re-trigger effect
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        active
    ]);
    const src = data.urls.small;
    const userName = data.user.name;
    const theme = (0, $jPEKE$useTheme)().sanity;
    return /*#__PURE__*/ (0, $jPEKE$jsx)((0, $2eb3d34edc401dab$export$be92b6f5f03c0fe9), {
        ref: rootElm,
        studioTheme: theme,
        title: `Select image by ${userName} from Unsplash`,
        tabIndex: 0,
        onKeyDown: handleKeyDown,
        onMouseDown: handleMouseDown,
        style: {
            width: `${width}px`,
            height: `${height}px`,
            backgroundImage: `url("${src}")`
        },
        onClick: handleClick,
        children: /*#__PURE__*/ (0, $jPEKE$jsx)((0, $2eb3d34edc401dab$export$efa8bdf03adcbcab), {
            onClick: handleCreditLineClicked,
            children: /*#__PURE__*/ (0, $jPEKE$jsx)((0, $2eb3d34edc401dab$export$ac05e79a4174af5c), {
                padding: 2,
                radius: 2,
                margin: 2,
                children: /*#__PURE__*/ (0, $jPEKE$jsxs)((0, $jPEKE$Text), {
                    size: 1,
                    title: `Open image by ${userName} on Unsplash in new window`,
                    children: [
                        "By @",
                        data.user.username
                    ]
                })
            })
        })
    });
}




const $cb3eafd6aafd29e7$var$fetchSearch = (client, query, page, perPage)=>(0, $jPEKE$defer)(()=>client.observable.request({
            url: `/addons/unsplash/search/photos?query=${encodeURIComponent(query)}&page=${page}&per_page=${perPage}`,
            withCredentials: true,
            method: "GET"
        }));
const $cb3eafd6aafd29e7$var$fetchList = (client, type, page, perPage)=>(0, $jPEKE$defer)(()=>client.observable.request({
            url: `/addons/unsplash/photos?order_by=${type}&page=${page}&per_page=${perPage}`,
            withCredentials: true,
            method: "GET"
        }));
function $cb3eafd6aafd29e7$export$83e179a74b22ff18(client, photo) {
    const downloadUrl = photo.links.download_location.replace("https://api.unsplash.com", "/addons/unsplash");
    return client.request({
        url: downloadUrl,
        withCredentials: true,
        method: "GET"
    }).then((result)=>{
        return result.url;
    });
}
const $cb3eafd6aafd29e7$export$d76128d007d19019 = (client, query, page, resultsPerPage)=>{
    return (0, $jPEKE$concat)(query.pipe((0, $jPEKE$withLatestFrom)(page), (0, $jPEKE$debounceTime)(500), (0, $jPEKE$distinctUntilChanged)(), (0, $jPEKE$switchMap)(([q, p])=>{
        if (q) return $cb3eafd6aafd29e7$var$fetchSearch(client, q, p, resultsPerPage).pipe((0, $jPEKE$distinctUntilChanged)(), (0, $jPEKE$map)((result)=>result.results));
        return $cb3eafd6aafd29e7$var$fetchList(client, "popular", p, resultsPerPage);
    })));
};





const $ad78a55f70c021a6$export$4b85d3515bd863a5 = (0, $jPEKE$styledcomponents)((0, $jPEKE$Stack))`
  position: sticky;
  top: 0;
  z-index: 1;
`;
const $ad78a55f70c021a6$export$76d6749d1cf8513c = (0, $jPEKE$styledcomponents).div`
  overflow-y: auto;
  max-height: 80vh;
`;




const $b0837b306fbe32c5$var$RESULTS_PER_PAGE = 42;
const $b0837b306fbe32c5$var$PHOTO_SPACING = 2;
const $b0837b306fbe32c5$var$PHOTO_PADDING = 1 // offset the 1px border width
;
function $b0837b306fbe32c5$export$2e2bcd8739ae039(props) {
    const client = (0, $jPEKE$useClient)({
        apiVersion: "2022-09-01"
    });
    return /*#__PURE__*/ (0, $jPEKE$jsx)($b0837b306fbe32c5$var$UnsplashAssetSourceInternal, {
        ...props,
        client: client
    });
}
class $b0837b306fbe32c5$var$UnsplashAssetSourceInternal extends (0, $jPEKE$react).Component {
    static defaultProps = {
        selectedAssets: undefined
    };
    state = {
        cursor: 0,
        query: "",
        page: 1,
        searchResults: [
            []
        ],
        isLoading: true
    };
    searchSubscription = null;
    searchSubject$ = new (0, $jPEKE$BehaviorSubject)("");
    pageSubject$ = new (0, $jPEKE$BehaviorSubject)(1);
    componentDidMount() {
        this.searchSubscription = (0, $cb3eafd6aafd29e7$export$d76128d007d19019)(this.props.client, this.searchSubject$, this.pageSubject$, $b0837b306fbe32c5$var$RESULTS_PER_PAGE).subscribe({
            next: (results)=>{
                this.setState((prev)=>({
                        searchResults: [
                            ...prev.searchResults,
                            results
                        ],
                        isLoading: false
                    }));
            }
        });
    }
    componentWillUnmount() {
        if (this.searchSubscription) this.searchSubscription.unsubscribe();
    }
    handleSelect = (photo)=>{
        this.setState({
            isLoading: true
        });
        return (0, $cb3eafd6aafd29e7$export$83e179a74b22ff18)(this.props.client, photo).then((downloadUrl)=>{
            const description = photo.description || undefined;
            const asset = {
                kind: "url",
                value: downloadUrl,
                assetDocumentProps: {
                    _type: "sanity.imageAsset",
                    source: {
                        name: "unsplash",
                        id: photo.id,
                        url: photo.links.html
                    },
                    description: description,
                    creditLine: `${photo.user.name} by Unsplash`
                }
            };
            this.props.onSelect([
                asset
            ]);
        });
    };
    handleClose = ()=>{
        this.props.onClose();
    };
    handleSearchTermChanged = (event)=>{
        const query = event.currentTarget.value;
        this.setState({
            query: query,
            page: 1,
            searchResults: [
                []
            ],
            isLoading: true,
            cursor: 0
        });
        this.pageSubject$.next(1);
        this.searchSubject$.next(query);
    };
    handleScollerLoadMore = ()=>{
        // eslint-disable-next-line react/no-access-state-in-setstate
        const nextPage = this.state.page + 1;
        this.setState({
            page: nextPage,
            isLoading: true
        });
        this.pageSubject$.next(nextPage);
        this.searchSubject$.next(this.state.query);
    };
    handleKeyDown = (event)=>{
        const { cursor: cursor  } = this.state;
        if ((event.keyCode === 38 || event.keyCode === 37) && cursor > 0) this.setState((prevState)=>({
                cursor: prevState.cursor - 1
            }));
        else if ((event.keyCode === 40 || event.keyCode === 39) && cursor < this.getPhotos().length - 1) this.setState((prevState)=>({
                cursor: prevState.cursor + 1
            }));
    };
    getPhotos() {
        return (0, $jPEKE$lodashflatten)(this.state.searchResults);
    }
    updateCursor = (photo)=>{
        const index = this.getPhotos().findIndex((result)=>result.id === photo.id);
        this.setState({
            cursor: index
        });
    };
    renderImage = (props)=>{
        const { photo: photo , layout: layout  } = props;
        const active = this.getPhotos().findIndex((result)=>result.id === photo.data.id) === this.state.cursor || false;
        return /*#__PURE__*/ (0, $jPEKE$jsx)((0, $3e8dc0ce4c147379$export$2e2bcd8739ae039), {
            onClick: this.handleSelect.bind(photo.data),
            onKeyDown: this.handleKeyDown,
            data: photo.data,
            width: layout.width,
            height: layout.height,
            active: active,
            onFocus: this.updateCursor
        });
    };
    render() {
        const { query: query , searchResults: searchResults , isLoading: isLoading  } = this.state;
        return /*#__PURE__*/ (0, $jPEKE$jsx)((0, $jPEKE$Dialog), {
            id: "unsplash-asset-source",
            header: "Select image from Unsplash",
            onClose: this.handleClose,
            open: true,
            width: 4,
            children: /*#__PURE__*/ (0, $jPEKE$jsxs)((0, $jPEKE$Stack), {
                space: 3,
                padding: 4,
                children: [
                    /*#__PURE__*/ (0, $jPEKE$jsx)((0, $jPEKE$Card), {
                        children: /*#__PURE__*/ (0, $jPEKE$jsxs)((0, $ad78a55f70c021a6$export$4b85d3515bd863a5), {
                            space: 3,
                            children: [
                                /*#__PURE__*/ (0, $jPEKE$jsx)((0, $jPEKE$Text), {
                                    size: 1,
                                    weight: "semibold",
                                    children: "Search Unsplash"
                                }),
                                /*#__PURE__*/ (0, $jPEKE$jsx)((0, $jPEKE$TextInput), {
                                    label: "Search Unsplash.com",
                                    placeholder: "Topics or colors",
                                    value: query,
                                    onChange: this.handleSearchTermChanged
                                })
                            ]
                        })
                    }),
                    !isLoading && this.getPhotos().length === 0 && /*#__PURE__*/ (0, $jPEKE$jsx)((0, $jPEKE$Text), {
                        size: 1,
                        muted: true,
                        children: "No results found"
                    }),
                    /*#__PURE__*/ (0, $jPEKE$jsx)((0, $jPEKE$reactinfinitescrollcomponent), {
                        dataLength: this.getPhotos().length,
                        next: this.handleScollerLoadMore,
                        // scrollableTarget="unsplash-scroller"
                        hasMore: true,
                        scrollThreshold: 0.99,
                        height: "60vh",
                        loader: /*#__PURE__*/ (0, $jPEKE$jsx)((0, $jPEKE$Flex), {
                            align: "center",
                            justify: "center",
                            padding: 3,
                            children: /*#__PURE__*/ (0, $jPEKE$jsx)((0, $jPEKE$Spinner), {
                                muted: true
                            })
                        }),
                        endMessage: /*#__PURE__*/ (0, $jPEKE$jsx)((0, $jPEKE$Text), {
                            size: 1,
                            muted: true,
                            children: "No more results"
                        }),
                        children: searchResults.filter((photos)=>photos.length > 0).map((photos, index)=>/*#__PURE__*/ (0, $jPEKE$jsx)((0, $jPEKE$reactphotoalbum), {
                                layout: "rows",
                                spacing: $b0837b306fbe32c5$var$PHOTO_SPACING,
                                padding: $b0837b306fbe32c5$var$PHOTO_PADDING,
                                targetRowHeight: (width)=>{
                                    if (width < 300) return 150;
                                    else if (width < 600) return 200;
                                    return 300;
                                },
                                photos: photos.map((photo)=>({
                                        src: photo.urls.small,
                                        width: photo.width,
                                        height: photo.height,
                                        key: photo.id,
                                        data: photo
                                    })),
                                renderPhoto: this.renderImage,
                                componentsProps: {
                                    containerProps: {
                                        style: {
                                            marginBottom: `${$b0837b306fbe32c5$var$PHOTO_SPACING}px`
                                        }
                                    }
                                }
                            }, `gallery-${query || "popular"}-${index}`))
                    })
                ]
            })
        });
    }
}





const $2fbf39ab67896983$var$Svg = (0, $jPEKE$styledcomponents).svg`
  transform: scale(0.8);
`;
function $2fbf39ab67896983$export$2e2bcd8739ae039() {
    return /*#__PURE__*/ (0, $jPEKE$jsxs)($2fbf39ab67896983$var$Svg, {
        role: "img",
        viewBox: "0 0 24 24",
        width: "1em",
        height: "1em",
        fill: "currentColor",
        children: [
            /*#__PURE__*/ (0, $jPEKE$jsx)("title", {}),
            /*#__PURE__*/ (0, $jPEKE$jsx)("path", {
                d: "M7.5 6.75V0h9v6.75h-9zm9 3.75H24V24H0V10.5h7.5v6.75h9V10.5z"
            })
        ]
    });
}



const $df9eabe9bda49ea8$export$26a922d0c5d23b67 = {
    name: "unsplash",
    title: "Unsplash",
    component: (0, $b0837b306fbe32c5$export$2e2bcd8739ae039),
    icon: (0, $2fbf39ab67896983$export$2e2bcd8739ae039)
};
const $df9eabe9bda49ea8$export$38ee668edea18a81 = (0, $jPEKE$createPlugin)({
    name: "asset-source-unsplash-plugin",
    form: {
        image: {
            assetSources: (prev)=>{
                return [
                    ...prev,
                    $df9eabe9bda49ea8$export$26a922d0c5d23b67
                ];
            }
        }
    }
});


export {$df9eabe9bda49ea8$export$26a922d0c5d23b67 as unsplashAssetSource, $df9eabe9bda49ea8$export$38ee668edea18a81 as unsplashImageAsset};
//# sourceMappingURL=index.modern.js.map
