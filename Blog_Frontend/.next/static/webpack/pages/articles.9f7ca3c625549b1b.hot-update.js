"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/articles",{

/***/ "./node_modules/next-sanity-image/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/next-sanity-image/dist/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar imageUrlBuilder = __webpack_require__(/*! @sanity/image-url */ \"./node_modules/@sanity/image-url/lib/browser/image-url.umd.js\");\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar imageUrlBuilder__default = /*#__PURE__*/_interopDefaultLegacy(imageUrlBuilder);\n\nconst DEFAULT_FALLBACK_IMAGE_QUALITY = 75;\nconst DEFAULT_IMAGE_BUILDER = (imageUrlBuilder, options) => {\n    const result = imageUrlBuilder\n        .quality(options.quality || DEFAULT_FALLBACK_IMAGE_QUALITY)\n        .fit('clip');\n    if (options.width !== null) {\n        return result.width(options.width);\n    }\n    return result;\n};\nfunction getSanityRefId(image) {\n    if (typeof image === 'string') {\n        return image;\n    }\n    const obj = image;\n    const ref = image;\n    const img = image;\n    if (typeof image === 'string') {\n        return image;\n    }\n    if (obj.asset) {\n        return obj.asset._ref || obj.asset._id;\n    }\n    return ref._ref || img._id || '';\n}\nfunction getImageDimensions(id) {\n    const dimensions = id.split('-')[2];\n    const [width, height] = dimensions.split('x').map((num) => parseInt(num, 10));\n    const aspectRatio = width / height;\n    return { width, height, aspectRatio };\n}\nfunction getCroppedDimensions(image, baseDimensions) {\n    const crop = image.crop;\n    if (!crop) {\n        return baseDimensions;\n    }\n    const { width, height } = baseDimensions;\n    const croppedWidth = width * (1 - (crop.left + crop.right));\n    const croppedHeight = height * (1 - (crop.top + crop.bottom));\n    return {\n        width: croppedWidth,\n        height: croppedHeight,\n        aspectRatio: croppedWidth / croppedHeight\n    };\n}\nfunction useNextSanityImage(sanityClient, image, options) {\n    const imageBuilder = options?.imageBuilder || DEFAULT_IMAGE_BUILDER;\n    return react.useMemo(() => {\n        if (!image) {\n            return null;\n        }\n        // If the image has an alt text but does not contain an actual asset, the id will be\n        // undefined: https://github.com/bundlesandbatches/next-sanity-image/issues/14\n        const id = image ? getSanityRefId(image) : null;\n        if (!id) {\n            return null;\n        }\n        const originalImageDimensions = getImageDimensions(id);\n        const croppedImageDimensions = getCroppedDimensions(image, originalImageDimensions);\n        const loader = ({ width, quality }) => {\n            return (imageBuilder(imageUrlBuilder__default[\"default\"](sanityClient).image(image).auto('format'), {\n                width,\n                originalImageDimensions,\n                croppedImageDimensions,\n                quality: quality || null\n            }).url() || '');\n        };\n        const baseImgBuilderInstance = imageBuilder(imageUrlBuilder__default[\"default\"](sanityClient).image(image).auto('format'), {\n            width: null,\n            originalImageDimensions,\n            croppedImageDimensions,\n            quality: null\n        });\n        const width = baseImgBuilderInstance.options.width ||\n            (baseImgBuilderInstance.options.maxWidth\n                ? Math.min(baseImgBuilderInstance.options.maxWidth, croppedImageDimensions.width)\n                : croppedImageDimensions.width);\n        const height = baseImgBuilderInstance.options.height ||\n            (baseImgBuilderInstance.options.maxHeight\n                ? Math.min(baseImgBuilderInstance.options.maxHeight, croppedImageDimensions.height)\n                : Math.round(width / croppedImageDimensions.aspectRatio));\n        return {\n            loader,\n            src: baseImgBuilderInstance.url(),\n            width,\n            height\n        };\n    }, [imageBuilder, image, sanityClient]);\n}\n\nexports.useNextSanityImage = useNextSanityImage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC1zYW5pdHktaW1hZ2UvZGlzdC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELFlBQVksbUJBQU8sQ0FBQyw0Q0FBTztBQUMzQixzQkFBc0IsbUJBQU8sQ0FBQyx3RkFBbUI7O0FBRWpELHFDQUFxQyw0REFBNEQ7O0FBRWpHOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnQkFBZ0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsZ0JBQWdCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUEsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS1pbWFnZS9kaXN0L2luZGV4LmpzP2E0MzYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIGltYWdlVXJsQnVpbGRlciA9IHJlcXVpcmUoJ0BzYW5pdHkvaW1hZ2UtdXJsJyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wRGVmYXVsdExlZ2FjeSAoZSkgeyByZXR1cm4gZSAmJiB0eXBlb2YgZSA9PT0gJ29iamVjdCcgJiYgJ2RlZmF1bHQnIGluIGUgPyBlIDogeyAnZGVmYXVsdCc6IGUgfTsgfVxuXG52YXIgaW1hZ2VVcmxCdWlsZGVyX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShpbWFnZVVybEJ1aWxkZXIpO1xuXG5jb25zdCBERUZBVUxUX0ZBTExCQUNLX0lNQUdFX1FVQUxJVFkgPSA3NTtcbmNvbnN0IERFRkFVTFRfSU1BR0VfQlVJTERFUiA9IChpbWFnZVVybEJ1aWxkZXIsIG9wdGlvbnMpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBpbWFnZVVybEJ1aWxkZXJcbiAgICAgICAgLnF1YWxpdHkob3B0aW9ucy5xdWFsaXR5IHx8IERFRkFVTFRfRkFMTEJBQ0tfSU1BR0VfUVVBTElUWSlcbiAgICAgICAgLmZpdCgnY2xpcCcpO1xuICAgIGlmIChvcHRpb25zLndpZHRoICE9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQud2lkdGgob3B0aW9ucy53aWR0aCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuZnVuY3Rpb24gZ2V0U2FuaXR5UmVmSWQoaW1hZ2UpIHtcbiAgICBpZiAodHlwZW9mIGltYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gaW1hZ2U7XG4gICAgfVxuICAgIGNvbnN0IG9iaiA9IGltYWdlO1xuICAgIGNvbnN0IHJlZiA9IGltYWdlO1xuICAgIGNvbnN0IGltZyA9IGltYWdlO1xuICAgIGlmICh0eXBlb2YgaW1hZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBpbWFnZTtcbiAgICB9XG4gICAgaWYgKG9iai5hc3NldCkge1xuICAgICAgICByZXR1cm4gb2JqLmFzc2V0Ll9yZWYgfHwgb2JqLmFzc2V0Ll9pZDtcbiAgICB9XG4gICAgcmV0dXJuIHJlZi5fcmVmIHx8IGltZy5faWQgfHwgJyc7XG59XG5mdW5jdGlvbiBnZXRJbWFnZURpbWVuc2lvbnMoaWQpIHtcbiAgICBjb25zdCBkaW1lbnNpb25zID0gaWQuc3BsaXQoJy0nKVsyXTtcbiAgICBjb25zdCBbd2lkdGgsIGhlaWdodF0gPSBkaW1lbnNpb25zLnNwbGl0KCd4JykubWFwKChudW0pID0+IHBhcnNlSW50KG51bSwgMTApKTtcbiAgICBjb25zdCBhc3BlY3RSYXRpbyA9IHdpZHRoIC8gaGVpZ2h0O1xuICAgIHJldHVybiB7IHdpZHRoLCBoZWlnaHQsIGFzcGVjdFJhdGlvIH07XG59XG5mdW5jdGlvbiBnZXRDcm9wcGVkRGltZW5zaW9ucyhpbWFnZSwgYmFzZURpbWVuc2lvbnMpIHtcbiAgICBjb25zdCBjcm9wID0gaW1hZ2UuY3JvcDtcbiAgICBpZiAoIWNyb3ApIHtcbiAgICAgICAgcmV0dXJuIGJhc2VEaW1lbnNpb25zO1xuICAgIH1cbiAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQgfSA9IGJhc2VEaW1lbnNpb25zO1xuICAgIGNvbnN0IGNyb3BwZWRXaWR0aCA9IHdpZHRoICogKDEgLSAoY3JvcC5sZWZ0ICsgY3JvcC5yaWdodCkpO1xuICAgIGNvbnN0IGNyb3BwZWRIZWlnaHQgPSBoZWlnaHQgKiAoMSAtIChjcm9wLnRvcCArIGNyb3AuYm90dG9tKSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGNyb3BwZWRXaWR0aCxcbiAgICAgICAgaGVpZ2h0OiBjcm9wcGVkSGVpZ2h0LFxuICAgICAgICBhc3BlY3RSYXRpbzogY3JvcHBlZFdpZHRoIC8gY3JvcHBlZEhlaWdodFxuICAgIH07XG59XG5mdW5jdGlvbiB1c2VOZXh0U2FuaXR5SW1hZ2Uoc2FuaXR5Q2xpZW50LCBpbWFnZSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGltYWdlQnVpbGRlciA9IG9wdGlvbnM/LmltYWdlQnVpbGRlciB8fCBERUZBVUxUX0lNQUdFX0JVSUxERVI7XG4gICAgcmV0dXJuIHJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIWltYWdlKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGUgaW1hZ2UgaGFzIGFuIGFsdCB0ZXh0IGJ1dCBkb2VzIG5vdCBjb250YWluIGFuIGFjdHVhbCBhc3NldCwgdGhlIGlkIHdpbGwgYmVcbiAgICAgICAgLy8gdW5kZWZpbmVkOiBodHRwczovL2dpdGh1Yi5jb20vYnVuZGxlc2FuZGJhdGNoZXMvbmV4dC1zYW5pdHktaW1hZ2UvaXNzdWVzLzE0XG4gICAgICAgIGNvbnN0IGlkID0gaW1hZ2UgPyBnZXRTYW5pdHlSZWZJZChpbWFnZSkgOiBudWxsO1xuICAgICAgICBpZiAoIWlkKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvcmlnaW5hbEltYWdlRGltZW5zaW9ucyA9IGdldEltYWdlRGltZW5zaW9ucyhpZCk7XG4gICAgICAgIGNvbnN0IGNyb3BwZWRJbWFnZURpbWVuc2lvbnMgPSBnZXRDcm9wcGVkRGltZW5zaW9ucyhpbWFnZSwgb3JpZ2luYWxJbWFnZURpbWVuc2lvbnMpO1xuICAgICAgICBjb25zdCBsb2FkZXIgPSAoeyB3aWR0aCwgcXVhbGl0eSB9KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKGltYWdlQnVpbGRlcihpbWFnZVVybEJ1aWxkZXJfX2RlZmF1bHRbXCJkZWZhdWx0XCJdKHNhbml0eUNsaWVudCkuaW1hZ2UoaW1hZ2UpLmF1dG8oJ2Zvcm1hdCcpLCB7XG4gICAgICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICAgICAgb3JpZ2luYWxJbWFnZURpbWVuc2lvbnMsXG4gICAgICAgICAgICAgICAgY3JvcHBlZEltYWdlRGltZW5zaW9ucyxcbiAgICAgICAgICAgICAgICBxdWFsaXR5OiBxdWFsaXR5IHx8IG51bGxcbiAgICAgICAgICAgIH0pLnVybCgpIHx8ICcnKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgYmFzZUltZ0J1aWxkZXJJbnN0YW5jZSA9IGltYWdlQnVpbGRlcihpbWFnZVVybEJ1aWxkZXJfX2RlZmF1bHRbXCJkZWZhdWx0XCJdKHNhbml0eUNsaWVudCkuaW1hZ2UoaW1hZ2UpLmF1dG8oJ2Zvcm1hdCcpLCB7XG4gICAgICAgICAgICB3aWR0aDogbnVsbCxcbiAgICAgICAgICAgIG9yaWdpbmFsSW1hZ2VEaW1lbnNpb25zLFxuICAgICAgICAgICAgY3JvcHBlZEltYWdlRGltZW5zaW9ucyxcbiAgICAgICAgICAgIHF1YWxpdHk6IG51bGxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHdpZHRoID0gYmFzZUltZ0J1aWxkZXJJbnN0YW5jZS5vcHRpb25zLndpZHRoIHx8XG4gICAgICAgICAgICAoYmFzZUltZ0J1aWxkZXJJbnN0YW5jZS5vcHRpb25zLm1heFdpZHRoXG4gICAgICAgICAgICAgICAgPyBNYXRoLm1pbihiYXNlSW1nQnVpbGRlckluc3RhbmNlLm9wdGlvbnMubWF4V2lkdGgsIGNyb3BwZWRJbWFnZURpbWVuc2lvbnMud2lkdGgpXG4gICAgICAgICAgICAgICAgOiBjcm9wcGVkSW1hZ2VEaW1lbnNpb25zLndpZHRoKTtcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gYmFzZUltZ0J1aWxkZXJJbnN0YW5jZS5vcHRpb25zLmhlaWdodCB8fFxuICAgICAgICAgICAgKGJhc2VJbWdCdWlsZGVySW5zdGFuY2Uub3B0aW9ucy5tYXhIZWlnaHRcbiAgICAgICAgICAgICAgICA/IE1hdGgubWluKGJhc2VJbWdCdWlsZGVySW5zdGFuY2Uub3B0aW9ucy5tYXhIZWlnaHQsIGNyb3BwZWRJbWFnZURpbWVuc2lvbnMuaGVpZ2h0KVxuICAgICAgICAgICAgICAgIDogTWF0aC5yb3VuZCh3aWR0aCAvIGNyb3BwZWRJbWFnZURpbWVuc2lvbnMuYXNwZWN0UmF0aW8pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGxvYWRlcixcbiAgICAgICAgICAgIHNyYzogYmFzZUltZ0J1aWxkZXJJbnN0YW5jZS51cmwoKSxcbiAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0XG4gICAgICAgIH07XG4gICAgfSwgW2ltYWdlQnVpbGRlciwgaW1hZ2UsIHNhbml0eUNsaWVudF0pO1xufVxuXG5leHBvcnRzLnVzZU5leHRTYW5pdHlJbWFnZSA9IHVzZU5leHRTYW5pdHlJbWFnZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next-sanity-image/dist/index.js\n"));

/***/ })

});